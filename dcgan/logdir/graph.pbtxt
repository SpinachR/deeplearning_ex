node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "x"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 784
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "y"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "z"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "is_training"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "generator/projection/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\200\004\000\000"
      }
    }
  }
}
node {
  name: "generator/projection/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/projection/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "generator/projection/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "generator/projection/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/projection/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "generator/projection/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "generator/projection/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "generator/projection/weights/Initializer/truncated_normal"
  op: "Add"
  input: "generator/projection/weights/Initializer/truncated_normal/mul"
  input: "generator/projection/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "generator/projection/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/projection/weights/Assign"
  op: "Assign"
  input: "generator/projection/weights"
  input: "generator/projection/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/projection/weights/read"
  op: "Identity"
  input: "generator/projection/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "generator/projection/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/projection/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/projection/biases/Assign"
  op: "Assign"
  input: "generator/projection/biases"
  input: "generator/projection/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/projection/biases/read"
  op: "Identity"
  input: "generator/projection/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "generator/projection/MatMul"
  op: "MatMul"
  input: "z"
  input: "generator/projection/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "generator/projection/BiasAdd"
  op: "BiasAdd"
  input: "generator/projection/MatMul"
  input: "generator/projection/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator/projection/Relu"
  op: "Relu"
  input: "generator/projection/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "generator/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\003\000\000\000\003\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/Reshape"
  op: "Reshape"
  input: "generator/projection/Relu"
  input: "generator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/batch_norm/beta/Assign"
  op: "Assign"
  input: "generator/batch_norm/beta"
  input: "generator/batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/batch_norm/beta/read"
  op: "Identity"
  input: "generator/batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/batch_norm/gamma/Assign"
  op: "Assign"
  input: "generator/batch_norm/gamma"
  input: "generator/batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/batch_norm/gamma/read"
  op: "Identity"
  input: "generator/batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "generator/batch_norm/moving_mean"
  input: "generator/batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/batch_norm/moving_mean/read"
  op: "Identity"
  input: "generator/batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "generator/batch_norm/moving_variance"
  input: "generator/batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/batch_norm/moving_variance/read"
  op: "Identity"
  input: "generator/batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/batch_norm/moments/Mean"
  op: "Mean"
  input: "generator/Reshape"
  input: "generator/batch_norm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/batch_norm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/batch_norm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/moments/sufficient_statistics/Shape"
  op: "Shape"
  input: "generator/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/batch_norm/moments/sufficient_statistics/Cast"
  op: "Cast"
  input: "generator/batch_norm/moments/sufficient_statistics/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/moments/sufficient_statistics/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/batch_norm/moments/sufficient_statistics/Gather"
  op: "Gather"
  input: "generator/batch_norm/moments/sufficient_statistics/Cast"
  input: "generator/batch_norm/moments/sufficient_statistics/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "generator/batch_norm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator/batch_norm/moments/sufficient_statistics/count"
  op: "Prod"
  input: "generator/batch_norm/moments/sufficient_statistics/Gather"
  input: "generator/batch_norm/moments/sufficient_statistics/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/batch_norm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "generator/Reshape"
  input: "generator/batch_norm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/Reshape"
  input: "generator/batch_norm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/batch_norm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "generator/batch_norm/moments/sufficient_statistics/Sub"
  input: "generator/batch_norm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/batch_norm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/batch_norm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "generator/batch_norm/moments/sufficient_statistics/SquaredDifference"
  input: "generator/batch_norm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/batch_norm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/batch_norm/moments/Reshape"
  op: "Reshape"
  input: "generator/batch_norm/moments/StopGradient"
  input: "generator/batch_norm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "generator/batch_norm/moments/sufficient_statistics/count"
  input: "^generator/batch_norm/moments/sufficient_statistics/mean_ss"
  input: "^generator/batch_norm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "generator/batch_norm/moments/sufficient_statistics/mean_ss"
  input: "generator/batch_norm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/moments/normalize/mean"
  op: "Add"
  input: "generator/batch_norm/moments/normalize/shifted_mean"
  input: "generator/batch_norm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/moments/normalize/Mul"
  op: "Mul"
  input: "generator/batch_norm/moments/sufficient_statistics/var_ss"
  input: "generator/batch_norm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/moments/normalize/Square"
  op: "Square"
  input: "generator/batch_norm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/moments/normalize/variance"
  op: "Sub"
  input: "generator/batch_norm/moments/normalize/Mul"
  input: "generator/batch_norm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/switch_t"
  op: "Identity"
  input: "generator/batch_norm/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/switch_f"
  op: "Identity"
  input: "generator/batch_norm/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^generator/batch_norm/cond/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "generator/batch_norm/moving_mean/read"
  input: "generator/batch_norm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "generator/batch_norm/moments/normalize/mean"
  input: "generator/batch_norm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moments/normalize/mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "generator/batch_norm/cond/AssignMovingAvg/sub/Switch:1"
  input: "generator/batch_norm/cond/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "generator/batch_norm/cond/AssignMovingAvg/sub"
  input: "generator/batch_norm/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "generator/batch_norm/moving_mean"
  input: "generator/batch_norm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/AssignMovingAvg"
  op: "AssignSub"
  input: "generator/batch_norm/cond/AssignMovingAvg/Switch:1"
  input: "generator/batch_norm/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator/batch_norm/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^generator/batch_norm/cond/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "generator/batch_norm/moving_variance/read"
  input: "generator/batch_norm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "generator/batch_norm/moments/normalize/variance"
  input: "generator/batch_norm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moments/normalize/variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "generator/batch_norm/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "generator/batch_norm/cond/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "generator/batch_norm/cond/AssignMovingAvg_1/sub"
  input: "generator/batch_norm/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "generator/batch_norm/moving_variance"
  input: "generator/batch_norm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/AssignMovingAvg_1"
  op: "AssignSub"
  input: "generator/batch_norm/cond/AssignMovingAvg_1/Switch:1"
  input: "generator/batch_norm/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator/batch_norm/cond/Identity"
  op: "Identity"
  input: "generator/batch_norm/cond/AssignMovingAvg/sub/Switch_1:1"
  input: "^generator/batch_norm/cond/AssignMovingAvg"
  input: "^generator/batch_norm/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/Identity_1"
  op: "Identity"
  input: "generator/batch_norm/cond/AssignMovingAvg_1/sub/Switch_1:1"
  input: "^generator/batch_norm/cond/AssignMovingAvg"
  input: "^generator/batch_norm/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/Switch_1/Switch"
  op: "Switch"
  input: "generator/batch_norm/moving_mean/read"
  input: "generator/batch_norm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/Switch_1"
  op: "Switch"
  input: "generator/batch_norm/cond/Switch_1/Switch"
  input: "generator/batch_norm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/Switch_2/Switch"
  op: "Switch"
  input: "generator/batch_norm/moving_variance/read"
  input: "generator/batch_norm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/Switch_2"
  op: "Switch"
  input: "generator/batch_norm/cond/Switch_2/Switch"
  input: "generator/batch_norm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/Merge"
  op: "Merge"
  input: "generator/batch_norm/cond/Switch_1"
  input: "generator/batch_norm/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/cond/Merge_1"
  op: "Merge"
  input: "generator/batch_norm/cond/Switch_2"
  input: "generator/batch_norm/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "generator/batch_norm/batchnorm/add"
  op: "Add"
  input: "generator/batch_norm/cond/Merge_1"
  input: "generator/batch_norm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/batch_norm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/batchnorm/mul"
  op: "Mul"
  input: "generator/batch_norm/batchnorm/Rsqrt"
  input: "generator/batch_norm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/Reshape"
  input: "generator/batch_norm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/batch_norm/cond/Merge"
  input: "generator/batch_norm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/batchnorm/sub"
  op: "Sub"
  input: "generator/batch_norm/beta/read"
  input: "generator/batch_norm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/batch_norm/batchnorm/add_1"
  op: "Add"
  input: "generator/batch_norm/batchnorm/mul_1"
  input: "generator/batch_norm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/conv_tp0/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/conv_tp0/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "generator/conv_tp0/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "generator/conv_tp0/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/conv_tp0/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "generator/conv_tp0/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "generator/conv_tp0/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/weights/Initializer/truncated_normal"
  op: "Add"
  input: "generator/conv_tp0/weights/Initializer/truncated_normal/mul"
  input: "generator/conv_tp0/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/conv_tp0/weights/Assign"
  op: "Assign"
  input: "generator/conv_tp0/weights"
  input: "generator/conv_tp0/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp0/weights/read"
  op: "Identity"
  input: "generator/conv_tp0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/Shape"
  op: "Shape"
  input: "generator/batch_norm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/conv_tp0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator/conv_tp0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/conv_tp0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/conv_tp0/strided_slice"
  op: "StridedSlice"
  input: "generator/conv_tp0/Shape"
  input: "generator/conv_tp0/strided_slice/stack"
  input: "generator/conv_tp0/strided_slice/stack_1"
  input: "generator/conv_tp0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "generator/conv_tp0/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/conv_tp0/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/conv_tp0/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/conv_tp0/strided_slice_1"
  op: "StridedSlice"
  input: "generator/conv_tp0/Shape"
  input: "generator/conv_tp0/strided_slice_1/stack"
  input: "generator/conv_tp0/strided_slice_1/stack_1"
  input: "generator/conv_tp0/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "generator/conv_tp0/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/conv_tp0/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator/conv_tp0/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/conv_tp0/strided_slice_2"
  op: "StridedSlice"
  input: "generator/conv_tp0/Shape"
  input: "generator/conv_tp0/strided_slice_2/stack"
  input: "generator/conv_tp0/strided_slice_2/stack_1"
  input: "generator/conv_tp0/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "generator/conv_tp0/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/conv_tp0/Mul"
  op: "Mul"
  input: "generator/conv_tp0/strided_slice_1"
  input: "generator/conv_tp0/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/Mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/conv_tp0/Mul_1"
  op: "Mul"
  input: "generator/conv_tp0/strided_slice_2"
  input: "generator/conv_tp0/Mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "generator/conv_tp0/stack"
  op: "Pack"
  input: "generator/conv_tp0/strided_slice"
  input: "generator/conv_tp0/Mul"
  input: "generator/conv_tp0/Mul_1"
  input: "generator/conv_tp0/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/conv_tp0/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "generator/conv_tp0/stack"
  input: "generator/conv_tp0/weights/read"
  input: "generator/batch_norm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/beta/Assign"
  op: "Assign"
  input: "generator/conv_tp0/BatchNorm/beta"
  input: "generator/conv_tp0/BatchNorm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/beta/read"
  op: "Identity"
  input: "generator/conv_tp0/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "generator/conv_tp0/BatchNorm/gamma"
  input: "generator/conv_tp0/BatchNorm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/gamma/read"
  op: "Identity"
  input: "generator/conv_tp0/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "generator/conv_tp0/BatchNorm/moving_mean"
  input: "generator/conv_tp0/BatchNorm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "generator/conv_tp0/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "generator/conv_tp0/BatchNorm/moving_variance"
  input: "generator/conv_tp0/BatchNorm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "generator/conv_tp0/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/Mean"
  op: "Mean"
  input: "generator/conv_tp0/conv2d_transpose"
  input: "generator/conv_tp0/BatchNorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/conv_tp0/BatchNorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Shape"
  op: "Shape"
  input: "generator/conv_tp0/conv2d_transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Cast"
  op: "Cast"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather"
  op: "Gather"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Cast"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count"
  op: "Prod"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "generator/conv_tp0/conv2d_transpose"
  input: "generator/conv_tp0/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/conv_tp0/conv2d_transpose"
  input: "generator/conv_tp0/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/Reshape"
  op: "Reshape"
  input: "generator/conv_tp0/BatchNorm/moments/StopGradient"
  input: "generator/conv_tp0/BatchNorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count"
  input: "^generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "^generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "generator/conv_tp0/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/normalize/mean"
  op: "Add"
  input: "generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean"
  input: "generator/conv_tp0/BatchNorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/normalize/Mul"
  op: "Mul"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss"
  input: "generator/conv_tp0/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/normalize/Square"
  op: "Square"
  input: "generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/moments/normalize/variance"
  op: "Sub"
  input: "generator/conv_tp0/BatchNorm/moments/normalize/Mul"
  input: "generator/conv_tp0/BatchNorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/switch_t"
  op: "Identity"
  input: "generator/conv_tp0/BatchNorm/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/switch_f"
  op: "Identity"
  input: "generator/conv_tp0/BatchNorm/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^generator/conv_tp0/BatchNorm/cond/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "generator/conv_tp0/BatchNorm/moving_mean/read"
  input: "generator/conv_tp0/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "generator/conv_tp0/BatchNorm/moments/normalize/mean"
  input: "generator/conv_tp0/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moments/normalize/mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg/sub/Switch:1"
  input: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg/sub"
  input: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "generator/conv_tp0/BatchNorm/moving_mean"
  input: "generator/conv_tp0/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg"
  op: "AssignSub"
  input: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg/Switch:1"
  input: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^generator/conv_tp0/BatchNorm/cond/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "generator/conv_tp0/BatchNorm/moving_variance/read"
  input: "generator/conv_tp0/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "generator/conv_tp0/BatchNorm/moments/normalize/variance"
  input: "generator/conv_tp0/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moments/normalize/variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1/sub"
  input: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "generator/conv_tp0/BatchNorm/moving_variance"
  input: "generator/conv_tp0/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1"
  op: "AssignSub"
  input: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1/Switch:1"
  input: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/Identity"
  op: "Identity"
  input: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg/sub/Switch_1:1"
  input: "^generator/conv_tp0/BatchNorm/cond/AssignMovingAvg"
  input: "^generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/Identity_1"
  op: "Identity"
  input: "generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1:1"
  input: "^generator/conv_tp0/BatchNorm/cond/AssignMovingAvg"
  input: "^generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/Switch_1/Switch"
  op: "Switch"
  input: "generator/conv_tp0/BatchNorm/moving_mean/read"
  input: "generator/conv_tp0/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/Switch_1"
  op: "Switch"
  input: "generator/conv_tp0/BatchNorm/cond/Switch_1/Switch"
  input: "generator/conv_tp0/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/Switch_2/Switch"
  op: "Switch"
  input: "generator/conv_tp0/BatchNorm/moving_variance/read"
  input: "generator/conv_tp0/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/Switch_2"
  op: "Switch"
  input: "generator/conv_tp0/BatchNorm/cond/Switch_2/Switch"
  input: "generator/conv_tp0/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/Merge"
  op: "Merge"
  input: "generator/conv_tp0/BatchNorm/cond/Switch_1"
  input: "generator/conv_tp0/BatchNorm/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/cond/Merge_1"
  op: "Merge"
  input: "generator/conv_tp0/BatchNorm/cond/Switch_2"
  input: "generator/conv_tp0/BatchNorm/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/batchnorm/add"
  op: "Add"
  input: "generator/conv_tp0/BatchNorm/cond/Merge_1"
  input: "generator/conv_tp0/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/conv_tp0/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "generator/conv_tp0/BatchNorm/batchnorm/Rsqrt"
  input: "generator/conv_tp0/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/conv_tp0/conv2d_transpose"
  input: "generator/conv_tp0/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/conv_tp0/BatchNorm/cond/Merge"
  input: "generator/conv_tp0/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "generator/conv_tp0/BatchNorm/beta/read"
  input: "generator/conv_tp0/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "generator/conv_tp0/BatchNorm/batchnorm/mul_1"
  input: "generator/conv_tp0/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp0/Relu"
  op: "Relu"
  input: "generator/conv_tp0/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator/conv_tp1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/conv_tp1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "generator/conv_tp1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "generator/conv_tp1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/conv_tp1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "generator/conv_tp1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "generator/conv_tp1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "generator/conv_tp1/weights/Initializer/truncated_normal/mul"
  input: "generator/conv_tp1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/conv_tp1/weights/Assign"
  op: "Assign"
  input: "generator/conv_tp1/weights"
  input: "generator/conv_tp1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp1/weights/read"
  op: "Identity"
  input: "generator/conv_tp1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/Shape"
  op: "Shape"
  input: "generator/conv_tp0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/conv_tp1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator/conv_tp1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/conv_tp1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/conv_tp1/strided_slice"
  op: "StridedSlice"
  input: "generator/conv_tp1/Shape"
  input: "generator/conv_tp1/strided_slice/stack"
  input: "generator/conv_tp1/strided_slice/stack_1"
  input: "generator/conv_tp1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "generator/conv_tp1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/conv_tp1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/conv_tp1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/conv_tp1/strided_slice_1"
  op: "StridedSlice"
  input: "generator/conv_tp1/Shape"
  input: "generator/conv_tp1/strided_slice_1/stack"
  input: "generator/conv_tp1/strided_slice_1/stack_1"
  input: "generator/conv_tp1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "generator/conv_tp1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/conv_tp1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator/conv_tp1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/conv_tp1/strided_slice_2"
  op: "StridedSlice"
  input: "generator/conv_tp1/Shape"
  input: "generator/conv_tp1/strided_slice_2/stack"
  input: "generator/conv_tp1/strided_slice_2/stack_1"
  input: "generator/conv_tp1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "generator/conv_tp1/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/conv_tp1/Mul"
  op: "Mul"
  input: "generator/conv_tp1/strided_slice_1"
  input: "generator/conv_tp1/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/Mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/conv_tp1/Mul_1"
  op: "Mul"
  input: "generator/conv_tp1/strided_slice_2"
  input: "generator/conv_tp1/Mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "generator/conv_tp1/stack"
  op: "Pack"
  input: "generator/conv_tp1/strided_slice"
  input: "generator/conv_tp1/Mul"
  input: "generator/conv_tp1/Mul_1"
  input: "generator/conv_tp1/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/conv_tp1/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "generator/conv_tp1/stack"
  input: "generator/conv_tp1/weights/read"
  input: "generator/conv_tp0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "generator/conv_tp1/BatchNorm/beta"
  input: "generator/conv_tp1/BatchNorm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/beta/read"
  op: "Identity"
  input: "generator/conv_tp1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "generator/conv_tp1/BatchNorm/gamma"
  input: "generator/conv_tp1/BatchNorm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/gamma/read"
  op: "Identity"
  input: "generator/conv_tp1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "generator/conv_tp1/BatchNorm/moving_mean"
  input: "generator/conv_tp1/BatchNorm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "generator/conv_tp1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "generator/conv_tp1/BatchNorm/moving_variance"
  input: "generator/conv_tp1/BatchNorm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "generator/conv_tp1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/Mean"
  op: "Mean"
  input: "generator/conv_tp1/conv2d_transpose"
  input: "generator/conv_tp1/BatchNorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/conv_tp1/BatchNorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Shape"
  op: "Shape"
  input: "generator/conv_tp1/conv2d_transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Cast"
  op: "Cast"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather"
  op: "Gather"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Cast"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count"
  op: "Prod"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "generator/conv_tp1/conv2d_transpose"
  input: "generator/conv_tp1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/conv_tp1/conv2d_transpose"
  input: "generator/conv_tp1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/Reshape"
  op: "Reshape"
  input: "generator/conv_tp1/BatchNorm/moments/StopGradient"
  input: "generator/conv_tp1/BatchNorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count"
  input: "^generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "^generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "generator/conv_tp1/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/normalize/mean"
  op: "Add"
  input: "generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean"
  input: "generator/conv_tp1/BatchNorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/normalize/Mul"
  op: "Mul"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss"
  input: "generator/conv_tp1/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/normalize/Square"
  op: "Square"
  input: "generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/moments/normalize/variance"
  op: "Sub"
  input: "generator/conv_tp1/BatchNorm/moments/normalize/Mul"
  input: "generator/conv_tp1/BatchNorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/switch_t"
  op: "Identity"
  input: "generator/conv_tp1/BatchNorm/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/switch_f"
  op: "Identity"
  input: "generator/conv_tp1/BatchNorm/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^generator/conv_tp1/BatchNorm/cond/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "generator/conv_tp1/BatchNorm/moving_mean/read"
  input: "generator/conv_tp1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "generator/conv_tp1/BatchNorm/moments/normalize/mean"
  input: "generator/conv_tp1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moments/normalize/mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg/sub/Switch:1"
  input: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg/sub"
  input: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "generator/conv_tp1/BatchNorm/moving_mean"
  input: "generator/conv_tp1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg"
  op: "AssignSub"
  input: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg/Switch:1"
  input: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^generator/conv_tp1/BatchNorm/cond/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "generator/conv_tp1/BatchNorm/moving_variance/read"
  input: "generator/conv_tp1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "generator/conv_tp1/BatchNorm/moments/normalize/variance"
  input: "generator/conv_tp1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moments/normalize/variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1/sub"
  input: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "generator/conv_tp1/BatchNorm/moving_variance"
  input: "generator/conv_tp1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1"
  op: "AssignSub"
  input: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1/Switch:1"
  input: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/Identity"
  op: "Identity"
  input: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1:1"
  input: "^generator/conv_tp1/BatchNorm/cond/AssignMovingAvg"
  input: "^generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/Identity_1"
  op: "Identity"
  input: "generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1:1"
  input: "^generator/conv_tp1/BatchNorm/cond/AssignMovingAvg"
  input: "^generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/Switch_1/Switch"
  op: "Switch"
  input: "generator/conv_tp1/BatchNorm/moving_mean/read"
  input: "generator/conv_tp1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/Switch_1"
  op: "Switch"
  input: "generator/conv_tp1/BatchNorm/cond/Switch_1/Switch"
  input: "generator/conv_tp1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/Switch_2/Switch"
  op: "Switch"
  input: "generator/conv_tp1/BatchNorm/moving_variance/read"
  input: "generator/conv_tp1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/Switch_2"
  op: "Switch"
  input: "generator/conv_tp1/BatchNorm/cond/Switch_2/Switch"
  input: "generator/conv_tp1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/Merge"
  op: "Merge"
  input: "generator/conv_tp1/BatchNorm/cond/Switch_1"
  input: "generator/conv_tp1/BatchNorm/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/cond/Merge_1"
  op: "Merge"
  input: "generator/conv_tp1/BatchNorm/cond/Switch_2"
  input: "generator/conv_tp1/BatchNorm/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "generator/conv_tp1/BatchNorm/cond/Merge_1"
  input: "generator/conv_tp1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/conv_tp1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "generator/conv_tp1/BatchNorm/batchnorm/Rsqrt"
  input: "generator/conv_tp1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/conv_tp1/conv2d_transpose"
  input: "generator/conv_tp1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/conv_tp1/BatchNorm/cond/Merge"
  input: "generator/conv_tp1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "generator/conv_tp1/BatchNorm/beta/read"
  input: "generator/conv_tp1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "generator/conv_tp1/BatchNorm/batchnorm/mul_1"
  input: "generator/conv_tp1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp1/Relu"
  op: "Relu"
  input: "generator/conv_tp1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "generator/conv_tp3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/conv_tp3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "generator/conv_tp3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "generator/conv_tp3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/conv_tp3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "generator/conv_tp3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "generator/conv_tp3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "generator/conv_tp3/weights/Initializer/truncated_normal/mul"
  input: "generator/conv_tp3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/conv_tp3/weights/Assign"
  op: "Assign"
  input: "generator/conv_tp3/weights"
  input: "generator/conv_tp3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp3/weights/read"
  op: "Identity"
  input: "generator/conv_tp3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp3/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/conv_tp3/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/conv_tp3/biases/Assign"
  op: "Assign"
  input: "generator/conv_tp3/biases"
  input: "generator/conv_tp3/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp3/biases/read"
  op: "Identity"
  input: "generator/conv_tp3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp3/Shape"
  op: "Shape"
  input: "generator/conv_tp1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/conv_tp3/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator/conv_tp3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/conv_tp3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/conv_tp3/strided_slice"
  op: "StridedSlice"
  input: "generator/conv_tp3/Shape"
  input: "generator/conv_tp3/strided_slice/stack"
  input: "generator/conv_tp3/strided_slice/stack_1"
  input: "generator/conv_tp3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "generator/conv_tp3/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/conv_tp3/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/conv_tp3/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/conv_tp3/strided_slice_1"
  op: "StridedSlice"
  input: "generator/conv_tp3/Shape"
  input: "generator/conv_tp3/strided_slice_1/stack"
  input: "generator/conv_tp3/strided_slice_1/stack_1"
  input: "generator/conv_tp3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "generator/conv_tp3/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/conv_tp3/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator/conv_tp3/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/conv_tp3/strided_slice_2"
  op: "StridedSlice"
  input: "generator/conv_tp3/Shape"
  input: "generator/conv_tp3/strided_slice_2/stack"
  input: "generator/conv_tp3/strided_slice_2/stack_1"
  input: "generator/conv_tp3/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "generator/conv_tp3/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/conv_tp3/Mul"
  op: "Mul"
  input: "generator/conv_tp3/strided_slice_1"
  input: "generator/conv_tp3/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp3/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator/conv_tp3/add"
  op: "Add"
  input: "generator/conv_tp3/Mul"
  input: "generator/conv_tp3/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp3/Mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/conv_tp3/Mul_1"
  op: "Mul"
  input: "generator/conv_tp3/strided_slice_2"
  input: "generator/conv_tp3/Mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp3/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator/conv_tp3/add_1"
  op: "Add"
  input: "generator/conv_tp3/Mul_1"
  input: "generator/conv_tp3/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/conv_tp3/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/conv_tp3/stack"
  op: "Pack"
  input: "generator/conv_tp3/strided_slice"
  input: "generator/conv_tp3/add"
  input: "generator/conv_tp3/add_1"
  input: "generator/conv_tp3/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/conv_tp3/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "generator/conv_tp3/stack"
  input: "generator/conv_tp3/weights/read"
  input: "generator/conv_tp1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 28
          }
          dim {
            size: 28
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv_tp3/BiasAdd"
  op: "BiasAdd"
  input: "generator/conv_tp3/conv2d_transpose"
  input: "generator/conv_tp3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 28
          }
          dim {
            size: 28
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator/conv_tp3/Tanh"
  op: "Tanh"
  input: "generator/conv_tp3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 28
          }
          dim {
            size: 28
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\034\000\000\000\034\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "x"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 28
          }
          dim {
            size: 28
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv0/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv0/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/conv0/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "discriminator/conv0/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "discriminator/conv0/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/conv0/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "discriminator/conv0/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "discriminator/conv0/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv0/weights/Initializer/truncated_normal"
  op: "Add"
  input: "discriminator/conv0/weights/Initializer/truncated_normal/mul"
  input: "discriminator/conv0/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv0/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv0/weights/Assign"
  op: "Assign"
  input: "discriminator/conv0/weights"
  input: "discriminator/conv0/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv0/weights/read"
  op: "Identity"
  input: "discriminator/conv0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv0/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/conv0/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv0/biases/Assign"
  op: "Assign"
  input: "discriminator/conv0/biases"
  input: "discriminator/conv0/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv0/biases/read"
  op: "Identity"
  input: "discriminator/conv0/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv0/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv0/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv0/convolution"
  op: "Conv2D"
  input: "Reshape"
  input: "discriminator/conv0/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv0/BiasAdd"
  op: "BiasAdd"
  input: "discriminator/conv0/convolution"
  input: "discriminator/conv0/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator/conv0/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.600000023842
      }
    }
  }
}
node {
  name: "discriminator/conv0/lrelu/mul"
  op: "Mul"
  input: "discriminator/conv0/lrelu/mul/x"
  input: "discriminator/conv0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv0/lrelu/Abs"
  op: "Abs"
  input: "discriminator/conv0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv0/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40000000596
      }
    }
  }
}
node {
  name: "discriminator/conv0/lrelu/mul_1"
  op: "Mul"
  input: "discriminator/conv0/lrelu/mul_1/x"
  input: "discriminator/conv0/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv0/lrelu/add"
  op: "Add"
  input: "discriminator/conv0/lrelu/mul"
  input: "discriminator/conv0/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "discriminator/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "discriminator/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "discriminator/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "discriminator/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "discriminator/conv1/weights/Initializer/truncated_normal/mul"
  input: "discriminator/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv1/weights/Assign"
  op: "Assign"
  input: "discriminator/conv1/weights"
  input: "discriminator/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv1/weights/read"
  op: "Identity"
  input: "discriminator/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv1/convolution"
  op: "Conv2D"
  input: "discriminator/conv0/lrelu/add"
  input: "discriminator/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "discriminator/conv1/BatchNorm/beta"
  input: "discriminator/conv1/BatchNorm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "discriminator/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "discriminator/conv1/BatchNorm/gamma"
  input: "discriminator/conv1/BatchNorm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "discriminator/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "discriminator/conv1/BatchNorm/moving_mean"
  input: "discriminator/conv1/BatchNorm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "discriminator/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "discriminator/conv1/BatchNorm/moving_variance"
  input: "discriminator/conv1/BatchNorm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "discriminator/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/Mean"
  op: "Mean"
  input: "discriminator/conv1/convolution"
  input: "discriminator/conv1/BatchNorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "discriminator/conv1/BatchNorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/Shape"
  op: "Shape"
  input: "discriminator/conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/Cast"
  op: "Cast"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather"
  op: "Gather"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/Cast"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/count"
  op: "Prod"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "discriminator/conv1/convolution"
  input: "discriminator/conv1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "discriminator/conv1/convolution"
  input: "discriminator/conv1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/Reshape"
  op: "Reshape"
  input: "discriminator/conv1/BatchNorm/moments/StopGradient"
  input: "discriminator/conv1/BatchNorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/count"
  input: "^discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "^discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "discriminator/conv1/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/normalize/mean"
  op: "Add"
  input: "discriminator/conv1/BatchNorm/moments/normalize/shifted_mean"
  input: "discriminator/conv1/BatchNorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/normalize/Mul"
  op: "Mul"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss"
  input: "discriminator/conv1/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/normalize/Square"
  op: "Square"
  input: "discriminator/conv1/BatchNorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/moments/normalize/variance"
  op: "Sub"
  input: "discriminator/conv1/BatchNorm/moments/normalize/Mul"
  input: "discriminator/conv1/BatchNorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/switch_t"
  op: "Identity"
  input: "discriminator/conv1/BatchNorm/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/switch_f"
  op: "Identity"
  input: "discriminator/conv1/BatchNorm/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^discriminator/conv1/BatchNorm/cond/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "discriminator/conv1/BatchNorm/moving_mean/read"
  input: "discriminator/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "discriminator/conv1/BatchNorm/moments/normalize/mean"
  input: "discriminator/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moments/normalize/mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch:1"
  input: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg/sub"
  input: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "discriminator/conv1/BatchNorm/moving_mean"
  input: "discriminator/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg"
  op: "AssignSub"
  input: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg/Switch:1"
  input: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^discriminator/conv1/BatchNorm/cond/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "discriminator/conv1/BatchNorm/moving_variance/read"
  input: "discriminator/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "discriminator/conv1/BatchNorm/moments/normalize/variance"
  input: "discriminator/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moments/normalize/variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1/sub"
  input: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "discriminator/conv1/BatchNorm/moving_variance"
  input: "discriminator/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1"
  op: "AssignSub"
  input: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1/Switch:1"
  input: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/Identity"
  op: "Identity"
  input: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1:1"
  input: "^discriminator/conv1/BatchNorm/cond/AssignMovingAvg"
  input: "^discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/Identity_1"
  op: "Identity"
  input: "discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1:1"
  input: "^discriminator/conv1/BatchNorm/cond/AssignMovingAvg"
  input: "^discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/Switch_1/Switch"
  op: "Switch"
  input: "discriminator/conv1/BatchNorm/moving_mean/read"
  input: "discriminator/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/Switch_1"
  op: "Switch"
  input: "discriminator/conv1/BatchNorm/cond/Switch_1/Switch"
  input: "discriminator/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/Switch_2/Switch"
  op: "Switch"
  input: "discriminator/conv1/BatchNorm/moving_variance/read"
  input: "discriminator/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/Switch_2"
  op: "Switch"
  input: "discriminator/conv1/BatchNorm/cond/Switch_2/Switch"
  input: "discriminator/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/Merge"
  op: "Merge"
  input: "discriminator/conv1/BatchNorm/cond/Switch_1"
  input: "discriminator/conv1/BatchNorm/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/cond/Merge_1"
  op: "Merge"
  input: "discriminator/conv1/BatchNorm/cond/Switch_2"
  input: "discriminator/conv1/BatchNorm/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "discriminator/conv1/BatchNorm/cond/Merge_1"
  input: "discriminator/conv1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "discriminator/conv1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "discriminator/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "discriminator/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "discriminator/conv1/convolution"
  input: "discriminator/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "discriminator/conv1/BatchNorm/cond/Merge"
  input: "discriminator/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "discriminator/conv1/BatchNorm/beta/read"
  input: "discriminator/conv1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "discriminator/conv1/BatchNorm/batchnorm/mul_1"
  input: "discriminator/conv1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.600000023842
      }
    }
  }
}
node {
  name: "discriminator/conv1/lrelu/mul"
  op: "Mul"
  input: "discriminator/conv1/lrelu/mul/x"
  input: "discriminator/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/lrelu/Abs"
  op: "Abs"
  input: "discriminator/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40000000596
      }
    }
  }
}
node {
  name: "discriminator/conv1/lrelu/mul_1"
  op: "Mul"
  input: "discriminator/conv1/lrelu/mul_1/x"
  input: "discriminator/conv1/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv1/lrelu/add"
  op: "Add"
  input: "discriminator/conv1/lrelu/mul"
  input: "discriminator/conv1/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "discriminator/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "discriminator/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "discriminator/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "discriminator/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "discriminator/conv2/weights/Initializer/truncated_normal/mul"
  input: "discriminator/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv2/weights/Assign"
  op: "Assign"
  input: "discriminator/conv2/weights"
  input: "discriminator/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv2/weights/read"
  op: "Identity"
  input: "discriminator/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv2/convolution"
  op: "Conv2D"
  input: "discriminator/conv1/lrelu/add"
  input: "discriminator/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "discriminator/conv2/BatchNorm/beta"
  input: "discriminator/conv2/BatchNorm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "discriminator/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "discriminator/conv2/BatchNorm/gamma"
  input: "discriminator/conv2/BatchNorm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "discriminator/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "discriminator/conv2/BatchNorm/moving_mean"
  input: "discriminator/conv2/BatchNorm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "discriminator/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "discriminator/conv2/BatchNorm/moving_variance"
  input: "discriminator/conv2/BatchNorm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "discriminator/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/Mean"
  op: "Mean"
  input: "discriminator/conv2/convolution"
  input: "discriminator/conv2/BatchNorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "discriminator/conv2/BatchNorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/Shape"
  op: "Shape"
  input: "discriminator/conv2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/Cast"
  op: "Cast"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather"
  op: "Gather"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/Cast"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/count"
  op: "Prod"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "discriminator/conv2/convolution"
  input: "discriminator/conv2/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "discriminator/conv2/convolution"
  input: "discriminator/conv2/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/Reshape"
  op: "Reshape"
  input: "discriminator/conv2/BatchNorm/moments/StopGradient"
  input: "discriminator/conv2/BatchNorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/count"
  input: "^discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "^discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "discriminator/conv2/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/normalize/mean"
  op: "Add"
  input: "discriminator/conv2/BatchNorm/moments/normalize/shifted_mean"
  input: "discriminator/conv2/BatchNorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/normalize/Mul"
  op: "Mul"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss"
  input: "discriminator/conv2/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/normalize/Square"
  op: "Square"
  input: "discriminator/conv2/BatchNorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/moments/normalize/variance"
  op: "Sub"
  input: "discriminator/conv2/BatchNorm/moments/normalize/Mul"
  input: "discriminator/conv2/BatchNorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/switch_t"
  op: "Identity"
  input: "discriminator/conv2/BatchNorm/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/switch_f"
  op: "Identity"
  input: "discriminator/conv2/BatchNorm/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^discriminator/conv2/BatchNorm/cond/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "discriminator/conv2/BatchNorm/moving_mean/read"
  input: "discriminator/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "discriminator/conv2/BatchNorm/moments/normalize/mean"
  input: "discriminator/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moments/normalize/mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch:1"
  input: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg/sub"
  input: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "discriminator/conv2/BatchNorm/moving_mean"
  input: "discriminator/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg"
  op: "AssignSub"
  input: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg/Switch:1"
  input: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^discriminator/conv2/BatchNorm/cond/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "discriminator/conv2/BatchNorm/moving_variance/read"
  input: "discriminator/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "discriminator/conv2/BatchNorm/moments/normalize/variance"
  input: "discriminator/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moments/normalize/variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1/sub"
  input: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "discriminator/conv2/BatchNorm/moving_variance"
  input: "discriminator/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1"
  op: "AssignSub"
  input: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1/Switch:1"
  input: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/Identity"
  op: "Identity"
  input: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch_1:1"
  input: "^discriminator/conv2/BatchNorm/cond/AssignMovingAvg"
  input: "^discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/Identity_1"
  op: "Identity"
  input: "discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1:1"
  input: "^discriminator/conv2/BatchNorm/cond/AssignMovingAvg"
  input: "^discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/Switch_1/Switch"
  op: "Switch"
  input: "discriminator/conv2/BatchNorm/moving_mean/read"
  input: "discriminator/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/Switch_1"
  op: "Switch"
  input: "discriminator/conv2/BatchNorm/cond/Switch_1/Switch"
  input: "discriminator/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/Switch_2/Switch"
  op: "Switch"
  input: "discriminator/conv2/BatchNorm/moving_variance/read"
  input: "discriminator/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/Switch_2"
  op: "Switch"
  input: "discriminator/conv2/BatchNorm/cond/Switch_2/Switch"
  input: "discriminator/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/Merge"
  op: "Merge"
  input: "discriminator/conv2/BatchNorm/cond/Switch_1"
  input: "discriminator/conv2/BatchNorm/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/cond/Merge_1"
  op: "Merge"
  input: "discriminator/conv2/BatchNorm/cond/Switch_2"
  input: "discriminator/conv2/BatchNorm/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/batchnorm/add"
  op: "Add"
  input: "discriminator/conv2/BatchNorm/cond/Merge_1"
  input: "discriminator/conv2/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "discriminator/conv2/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "discriminator/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "discriminator/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "discriminator/conv2/convolution"
  input: "discriminator/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "discriminator/conv2/BatchNorm/cond/Merge"
  input: "discriminator/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "discriminator/conv2/BatchNorm/beta/read"
  input: "discriminator/conv2/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "discriminator/conv2/BatchNorm/batchnorm/mul_1"
  input: "discriminator/conv2/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.600000023842
      }
    }
  }
}
node {
  name: "discriminator/conv2/lrelu/mul"
  op: "Mul"
  input: "discriminator/conv2/lrelu/mul/x"
  input: "discriminator/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/lrelu/Abs"
  op: "Abs"
  input: "discriminator/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40000000596
      }
    }
  }
}
node {
  name: "discriminator/conv2/lrelu/mul_1"
  op: "Mul"
  input: "discriminator/conv2/lrelu/mul_1/x"
  input: "discriminator/conv2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv2/lrelu/add"
  op: "Add"
  input: "discriminator/conv2/lrelu/mul"
  input: "discriminator/conv2/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv4/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv4/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/conv4/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "discriminator/conv4/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "discriminator/conv4/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/conv4/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "discriminator/conv4/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "discriminator/conv4/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv4/weights/Initializer/truncated_normal"
  op: "Add"
  input: "discriminator/conv4/weights/Initializer/truncated_normal/mul"
  input: "discriminator/conv4/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv4/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv4/weights/Assign"
  op: "Assign"
  input: "discriminator/conv4/weights"
  input: "discriminator/conv4/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv4/weights/read"
  op: "Identity"
  input: "discriminator/conv4/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv4/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/conv4/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv4/biases/Assign"
  op: "Assign"
  input: "discriminator/conv4/biases"
  input: "discriminator/conv4/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv4/biases/read"
  op: "Identity"
  input: "discriminator/conv4/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/conv4/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv4/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv4/convolution"
  op: "Conv2D"
  input: "discriminator/conv2/lrelu/add"
  input: "discriminator/conv4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv4/BiasAdd"
  op: "BiasAdd"
  input: "discriminator/conv4/convolution"
  input: "discriminator/conv4/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator/squeeze"
  op: "Squeeze"
  input: "discriminator/conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "discriminator_1/conv0/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_1/conv0/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_1/conv0/convolution"
  op: "Conv2D"
  input: "generator/conv_tp3/Tanh"
  input: "discriminator/conv0/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_1/conv0/BiasAdd"
  op: "BiasAdd"
  input: "discriminator_1/conv0/convolution"
  input: "discriminator/conv0/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_1/conv0/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.600000023842
      }
    }
  }
}
node {
  name: "discriminator_1/conv0/lrelu/mul"
  op: "Mul"
  input: "discriminator_1/conv0/lrelu/mul/x"
  input: "discriminator_1/conv0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv0/lrelu/Abs"
  op: "Abs"
  input: "discriminator_1/conv0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv0/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40000000596
      }
    }
  }
}
node {
  name: "discriminator_1/conv0/lrelu/mul_1"
  op: "Mul"
  input: "discriminator_1/conv0/lrelu/mul_1/x"
  input: "discriminator_1/conv0/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv0/lrelu/add"
  op: "Add"
  input: "discriminator_1/conv0/lrelu/mul"
  input: "discriminator_1/conv0/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/convolution"
  op: "Conv2D"
  input: "discriminator_1/conv0/lrelu/add"
  input: "discriminator/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/Mean"
  op: "Mean"
  input: "discriminator_1/conv1/convolution"
  input: "discriminator_1/conv1/BatchNorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "discriminator_1/conv1/BatchNorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Shape"
  op: "Shape"
  input: "discriminator_1/conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Cast"
  op: "Cast"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather"
  op: "Gather"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Cast"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count"
  op: "Prod"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "discriminator_1/conv1/convolution"
  input: "discriminator_1/conv1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "discriminator_1/conv1/convolution"
  input: "discriminator_1/conv1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/Reshape"
  op: "Reshape"
  input: "discriminator_1/conv1/BatchNorm/moments/StopGradient"
  input: "discriminator_1/conv1/BatchNorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count"
  input: "^discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "^discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/normalize/mean"
  op: "Add"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean"
  input: "discriminator_1/conv1/BatchNorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/normalize/Mul"
  op: "Mul"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/normalize/Square"
  op: "Square"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/moments/normalize/variance"
  op: "Sub"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/Mul"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/switch_t"
  op: "Identity"
  input: "discriminator_1/conv1/BatchNorm/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/switch_f"
  op: "Identity"
  input: "discriminator_1/conv1/BatchNorm/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^discriminator_1/conv1/BatchNorm/cond/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "discriminator/conv1/BatchNorm/moving_mean/read"
  input: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/mean"
  input: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_1/conv1/BatchNorm/moments/normalize/mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch:1"
  input: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/sub"
  input: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "discriminator/conv1/BatchNorm/moving_mean"
  input: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg"
  op: "AssignSub"
  input: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/Switch:1"
  input: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^discriminator_1/conv1/BatchNorm/cond/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "discriminator/conv1/BatchNorm/moving_variance/read"
  input: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/variance"
  input: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_1/conv1/BatchNorm/moments/normalize/variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/sub"
  input: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "discriminator/conv1/BatchNorm/moving_variance"
  input: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1"
  op: "AssignSub"
  input: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/Switch:1"
  input: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/Identity"
  op: "Identity"
  input: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1:1"
  input: "^discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg"
  input: "^discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/Identity_1"
  op: "Identity"
  input: "discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1:1"
  input: "^discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg"
  input: "^discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/Switch_1/Switch"
  op: "Switch"
  input: "discriminator/conv1/BatchNorm/moving_mean/read"
  input: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/Switch_1"
  op: "Switch"
  input: "discriminator_1/conv1/BatchNorm/cond/Switch_1/Switch"
  input: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/Switch_2/Switch"
  op: "Switch"
  input: "discriminator/conv1/BatchNorm/moving_variance/read"
  input: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/Switch_2"
  op: "Switch"
  input: "discriminator_1/conv1/BatchNorm/cond/Switch_2/Switch"
  input: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/Merge"
  op: "Merge"
  input: "discriminator_1/conv1/BatchNorm/cond/Switch_1"
  input: "discriminator_1/conv1/BatchNorm/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/cond/Merge_1"
  op: "Merge"
  input: "discriminator_1/conv1/BatchNorm/cond/Switch_2"
  input: "discriminator_1/conv1/BatchNorm/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "discriminator_1/conv1/BatchNorm/cond/Merge_1"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "discriminator/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "discriminator_1/conv1/convolution"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "discriminator_1/conv1/BatchNorm/cond/Merge"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "discriminator/conv1/BatchNorm/beta/read"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/mul_1"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.600000023842
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/lrelu/mul"
  op: "Mul"
  input: "discriminator_1/conv1/lrelu/mul/x"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/lrelu/Abs"
  op: "Abs"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40000000596
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/lrelu/mul_1"
  op: "Mul"
  input: "discriminator_1/conv1/lrelu/mul_1/x"
  input: "discriminator_1/conv1/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv1/lrelu/add"
  op: "Add"
  input: "discriminator_1/conv1/lrelu/mul"
  input: "discriminator_1/conv1/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/convolution"
  op: "Conv2D"
  input: "discriminator_1/conv1/lrelu/add"
  input: "discriminator/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/Mean"
  op: "Mean"
  input: "discriminator_1/conv2/convolution"
  input: "discriminator_1/conv2/BatchNorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "discriminator_1/conv2/BatchNorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Shape"
  op: "Shape"
  input: "discriminator_1/conv2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Cast"
  op: "Cast"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather"
  op: "Gather"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Cast"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count"
  op: "Prod"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "discriminator_1/conv2/convolution"
  input: "discriminator_1/conv2/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "discriminator_1/conv2/convolution"
  input: "discriminator_1/conv2/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/Reshape"
  op: "Reshape"
  input: "discriminator_1/conv2/BatchNorm/moments/StopGradient"
  input: "discriminator_1/conv2/BatchNorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count"
  input: "^discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "^discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/normalize/mean"
  op: "Add"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean"
  input: "discriminator_1/conv2/BatchNorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/normalize/Mul"
  op: "Mul"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/normalize/Square"
  op: "Square"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/moments/normalize/variance"
  op: "Sub"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/Mul"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/switch_t"
  op: "Identity"
  input: "discriminator_1/conv2/BatchNorm/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/switch_f"
  op: "Identity"
  input: "discriminator_1/conv2/BatchNorm/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^discriminator_1/conv2/BatchNorm/cond/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "discriminator/conv2/BatchNorm/moving_mean/read"
  input: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/mean"
  input: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_1/conv2/BatchNorm/moments/normalize/mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch:1"
  input: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/sub"
  input: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "discriminator/conv2/BatchNorm/moving_mean"
  input: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg"
  op: "AssignSub"
  input: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/Switch:1"
  input: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^discriminator_1/conv2/BatchNorm/cond/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "discriminator/conv2/BatchNorm/moving_variance/read"
  input: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/variance"
  input: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_1/conv2/BatchNorm/moments/normalize/variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/sub"
  input: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "discriminator/conv2/BatchNorm/moving_variance"
  input: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1"
  op: "AssignSub"
  input: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/Switch:1"
  input: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/Identity"
  op: "Identity"
  input: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch_1:1"
  input: "^discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg"
  input: "^discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/Identity_1"
  op: "Identity"
  input: "discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1:1"
  input: "^discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg"
  input: "^discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/Switch_1/Switch"
  op: "Switch"
  input: "discriminator/conv2/BatchNorm/moving_mean/read"
  input: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/Switch_1"
  op: "Switch"
  input: "discriminator_1/conv2/BatchNorm/cond/Switch_1/Switch"
  input: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/Switch_2/Switch"
  op: "Switch"
  input: "discriminator/conv2/BatchNorm/moving_variance/read"
  input: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/Switch_2"
  op: "Switch"
  input: "discriminator_1/conv2/BatchNorm/cond/Switch_2/Switch"
  input: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/Merge"
  op: "Merge"
  input: "discriminator_1/conv2/BatchNorm/cond/Switch_1"
  input: "discriminator_1/conv2/BatchNorm/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/cond/Merge_1"
  op: "Merge"
  input: "discriminator_1/conv2/BatchNorm/cond/Switch_2"
  input: "discriminator_1/conv2/BatchNorm/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/batchnorm/add"
  op: "Add"
  input: "discriminator_1/conv2/BatchNorm/cond/Merge_1"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "discriminator/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "discriminator_1/conv2/convolution"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "discriminator_1/conv2/BatchNorm/cond/Merge"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "discriminator/conv2/BatchNorm/beta/read"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/mul_1"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.600000023842
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/lrelu/mul"
  op: "Mul"
  input: "discriminator_1/conv2/lrelu/mul/x"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/lrelu/Abs"
  op: "Abs"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40000000596
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/lrelu/mul_1"
  op: "Mul"
  input: "discriminator_1/conv2/lrelu/mul_1/x"
  input: "discriminator_1/conv2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv2/lrelu/add"
  op: "Add"
  input: "discriminator_1/conv2/lrelu/mul"
  input: "discriminator_1/conv2/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_1/conv4/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_1/conv4/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_1/conv4/convolution"
  op: "Conv2D"
  input: "discriminator_1/conv2/lrelu/add"
  input: "discriminator/conv4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_1/conv4/BiasAdd"
  op: "BiasAdd"
  input: "discriminator_1/conv4/convolution"
  input: "discriminator/conv4/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_1/squeeze"
  op: "Squeeze"
  input: "discriminator_1/conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Loss_D/ones_like/Shape"
  op: "Shape"
  input: "discriminator/squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_D/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss_D/ones_like"
  op: "Fill"
  input: "Loss_D/ones_like/Shape"
  input: "Loss_D/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/xentropy/zeros_like"
  op: "ZerosLike"
  input: "discriminator/squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator/squeeze"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/xentropy/Select"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "discriminator/squeeze"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/xentropy/Neg"
  op: "Neg"
  input: "discriminator/squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/Neg"
  input: "discriminator/squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/xentropy/mul"
  op: "Mul"
  input: "discriminator/squeeze"
  input: "Loss_D/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/xentropy/sub"
  op: "Sub"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/Select"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/xentropy/Exp"
  op: "Exp"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/xentropy/Log1p"
  op: "Log1p"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/xentropy"
  op: "Add"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/sub"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/ToFloat_1/x"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/Mul"
  op: "Mul"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy"
  input: "Loss_D/sigmoid_cross_entropy_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/Const"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/Sum"
  op: "Sum"
  input: "Loss_D/sigmoid_cross_entropy_loss/Mul"
  input: "Loss_D/sigmoid_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "Loss_D/sigmoid_cross_entropy_loss/ToFloat_1/x"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/num_present/zeros_like"
  op: "ZerosLike"
  input: "Loss_D/sigmoid_cross_entropy_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present/ones_like/Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present/Equal"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present/zeros_like"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy"
  input: "^Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy"
  input: "^Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present/Select"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/num_present"
  op: "Sum"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "Loss_D/sigmoid_cross_entropy_loss/Sum"
  input: "Loss_D/sigmoid_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/Greater/y"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/Greater"
  op: "Greater"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present"
  input: "Loss_D/sigmoid_cross_entropy_loss/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/Equal/y"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/Equal"
  op: "Equal"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present"
  input: "Loss_D/sigmoid_cross_entropy_loss/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/ones_like/Shape"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/ones_like/Const"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/ones_like"
  op: "Fill"
  input: "Loss_D/sigmoid_cross_entropy_loss/ones_like/Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/Select"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss/Equal"
  input: "Loss_D/sigmoid_cross_entropy_loss/ones_like"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/div"
  op: "RealDiv"
  input: "Loss_D/sigmoid_cross_entropy_loss/Sum_1"
  input: "Loss_D/sigmoid_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/zeros_like"
  op: "ZerosLike"
  input: "Loss_D/sigmoid_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss/value"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss/Greater"
  input: "Loss_D/sigmoid_cross_entropy_loss/div"
  input: "Loss_D/sigmoid_cross_entropy_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/zeros_like"
  op: "ZerosLike"
  input: "discriminator_1/squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/zeros_like"
  op: "ZerosLike"
  input: "discriminator_1/squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_1/squeeze"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/GreaterEqual"
  input: "discriminator_1/squeeze"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Neg"
  op: "Neg"
  input: "discriminator_1/squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/GreaterEqual"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Neg"
  input: "discriminator_1/squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul"
  op: "Mul"
  input: "discriminator_1/squeeze"
  input: "Loss_D/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub"
  op: "Sub"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Exp"
  op: "Exp"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Log1p"
  op: "Log1p"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy"
  op: "Add"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/values/shape"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/ToFloat_1/x"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/Mul"
  op: "Mul"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/Const"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/Sum"
  op: "Sum"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Mul"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/Equal/y"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/Equal"
  op: "Equal"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/ToFloat_1/x"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/zeros_like"
  op: "ZerosLike"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/ones_like/Shape"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/ones_like/Const"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/ones_like"
  op: "Fill"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/ones_like/Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/Select"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/Equal"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/zeros_like"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights/ones_like/Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights"
  op: "Mul"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/Select"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/Const"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/num_present"
  op: "Sum"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/Const_1"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/Sum_1"
  op: "Sum"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Sum"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/Greater/y"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/Greater"
  op: "Greater"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/Equal/y"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/Equal"
  op: "Equal"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/ones_like/Shape"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/ones_like/Const"
  op: "Const"
  input: "^Loss_D/sigmoid_cross_entropy_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/ones_like"
  op: "Fill"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/ones_like/Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/Select"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Equal"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/ones_like"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/div"
  op: "RealDiv"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Sum_1"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/zeros_like"
  op: "ZerosLike"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/sigmoid_cross_entropy_loss_1/value"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Greater"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/div"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_D/add"
  op: "Add"
  input: "Loss_D/sigmoid_cross_entropy_loss/value"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_G/ones_like/Shape"
  op: "Shape"
  input: "discriminator_1/squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_G/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss_G/ones_like"
  op: "Fill"
  input: "Loss_G/ones_like/Shape"
  input: "Loss_G/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/xentropy/zeros_like"
  op: "ZerosLike"
  input: "discriminator_1/squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_1/squeeze"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/xentropy/Select"
  op: "Select"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "discriminator_1/squeeze"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/xentropy/Neg"
  op: "Neg"
  input: "discriminator_1/squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1"
  op: "Select"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/Neg"
  input: "discriminator_1/squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/xentropy/mul"
  op: "Mul"
  input: "discriminator_1/squeeze"
  input: "Loss_G/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/xentropy/sub"
  op: "Sub"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/Select"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/xentropy/Exp"
  op: "Exp"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/xentropy/Log1p"
  op: "Log1p"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/xentropy"
  op: "Add"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/sub"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/ToFloat_1/x"
  op: "Const"
  input: "^Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/Mul"
  op: "Mul"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy"
  input: "Loss_G/sigmoid_cross_entropy_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/Const"
  op: "Const"
  input: "^Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/Sum"
  op: "Sum"
  input: "Loss_G/sigmoid_cross_entropy_loss/Mul"
  input: "Loss_G/sigmoid_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "Loss_G/sigmoid_cross_entropy_loss/ToFloat_1/x"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/num_present/zeros_like"
  op: "ZerosLike"
  input: "Loss_G/sigmoid_cross_entropy_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present/ones_like/Shape"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present/Equal"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present/zeros_like"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy"
  input: "^Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy"
  input: "^Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present/Select"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/num_present"
  op: "Sum"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "Loss_G/sigmoid_cross_entropy_loss/Sum"
  input: "Loss_G/sigmoid_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/Greater/y"
  op: "Const"
  input: "^Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/Greater"
  op: "Greater"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present"
  input: "Loss_G/sigmoid_cross_entropy_loss/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/Equal/y"
  op: "Const"
  input: "^Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/Equal"
  op: "Equal"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present"
  input: "Loss_G/sigmoid_cross_entropy_loss/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/ones_like/Shape"
  op: "Const"
  input: "^Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/ones_like/Const"
  op: "Const"
  input: "^Loss_G/sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/ones_like"
  op: "Fill"
  input: "Loss_G/sigmoid_cross_entropy_loss/ones_like/Shape"
  input: "Loss_G/sigmoid_cross_entropy_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/Select"
  op: "Select"
  input: "Loss_G/sigmoid_cross_entropy_loss/Equal"
  input: "Loss_G/sigmoid_cross_entropy_loss/ones_like"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/div"
  op: "RealDiv"
  input: "Loss_G/sigmoid_cross_entropy_loss/Sum_1"
  input: "Loss_G/sigmoid_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/zeros_like"
  op: "ZerosLike"
  input: "Loss_G/sigmoid_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss_G/sigmoid_cross_entropy_loss/value"
  op: "Select"
  input: "Loss_G/sigmoid_cross_entropy_loss/Greater"
  input: "Loss_G/sigmoid_cross_entropy_loss/div"
  input: "Loss_G/sigmoid_cross_entropy_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Fill"
  op: "Fill"
  input: "Optimizer_D/gradients/Shape"
  input: "Optimizer_D/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/Loss_D/add_grad/Shape"
  input: "Optimizer_D/gradients/Loss_D/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/Fill"
  input: "Optimizer_D/gradients/Loss_D/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/add_grad/Sum"
  input: "Optimizer_D/gradients/Loss_D/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/Fill"
  input: "Optimizer_D/gradients/Loss_D/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/add_grad/Sum_1"
  input: "Optimizer_D/gradients/Loss_D/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/add_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/add_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/add_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/add_grad/Reshape_1"
  input: "^Optimizer_D/gradients/Loss_D/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/value_grad/zeros_like"
  op: "ZerosLike"
  input: "Loss_D/sigmoid_cross_entropy_loss/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/value_grad/Select"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss/Greater"
  input: "Optimizer_D/gradients/Loss_D/add_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/value_grad/Select_1"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss/Greater"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/value_grad/zeros_like"
  input: "Optimizer_D/gradients/Loss_D/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/value_grad/Select"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/value_grad/Select_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/value_grad/Select"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/value_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/value_grad/Select_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/value_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/value_grad/zeros_like"
  op: "ZerosLike"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/value_grad/Select"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Greater"
  input: "Optimizer_D/gradients/Loss_D/add_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/value_grad/Select_1"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Greater"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/value_grad/zeros_like"
  input: "Optimizer_D/gradients/Loss_D/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/value_grad/Select"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/value_grad/Select_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/value_grad/Select"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/value_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/value_grad/Select_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/value_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Shape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/RealDiv"
  op: "RealDiv"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "Loss_D/sigmoid_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/RealDiv"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Neg"
  op: "Neg"
  input: "Loss_D/sigmoid_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Neg"
  input: "Loss_D/sigmoid_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/RealDiv_1"
  input: "Loss_D/sigmoid_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Sum_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Reshape_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Shape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/RealDiv"
  op: "RealDiv"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/value_grad/tuple/control_dependency"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/RealDiv"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Neg"
  op: "Neg"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Neg"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/RealDiv_1"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/value_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Sum_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Reshape_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "Loss_D/sigmoid_cross_entropy_loss/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Select_grad/Select"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss/Equal"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Select_grad/Select_1"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss/Equal"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Select_grad/zeros_like"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Select_grad/Select"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Select_grad/Select_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Select_grad/Select"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Select_grad/Select_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/div_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Sum_1_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Sum_1_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Select_grad/Select"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Equal"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Select_grad/Select_1"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Equal"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Select_grad/zeros_like"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Select_grad/Select"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Select_grad/Select_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Select_grad/Select"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Select_grad/Select_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/div_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Sum_1_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Sum_1_grad/Tile"
  op: "Tile"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Sum_1_grad/Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Sum_1_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Sum_1_grad/Tile"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Sum_grad/Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Sum_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Sum_1_grad/Tile"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Sum_grad/Shape"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Sum_grad/Tile"
  op: "Tile"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Sum_grad/Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Select_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present_grad/Shape"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present_grad/Tile"
  op: "Tile"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present_grad/Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/Shape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Sum_grad/Tile"
  input: "Loss_D/sigmoid_cross_entropy_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/mul_1"
  op: "Mul"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/mul_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/Sum_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Select_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present_grad/Shape"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present_grad/Tile"
  op: "Tile"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present_grad/Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/Shape"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/Shape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Sum_grad/Tile"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/mul_1"
  op: "Mul"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/mul_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/Sum_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/Reshape_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Shape_1"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Shape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present_grad/Tile"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/mul_1"
  op: "Mul"
  input: "Loss_D/sigmoid_cross_entropy_loss/num_present/Select"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/mul_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Sum_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/Shape_1"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/Shape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present_grad/Tile"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/mul_1"
  op: "Mul"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/num_present/Select"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/mul_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/Sum_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/Reshape_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights/ones_like_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights/ones_like_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/num_present/broadcast_weights/ones_like_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/Shape"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/Shape_1"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/Shape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/Sum_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/Reshape_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/Shape"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/Shape_1"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/Shape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/Mul_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/Sum_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/Reshape_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Shape"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Shape_1"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Shape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Neg"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/add/x"
  op: "Const"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/add"
  op: "Add"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/add/x"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Shape"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Shape_1"
  op: "Shape"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Shape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Neg"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Reshape_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Log1p_grad/add/x"
  op: "Const"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Log1p_grad/add"
  op: "Add"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Log1p_grad/add/x"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Log1p_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "discriminator/squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select_1"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_grad/zeros_like"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/Shape"
  op: "Shape"
  input: "discriminator/squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/Shape_1"
  op: "Shape"
  input: "Loss_D/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/Shape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency_1"
  input: "Loss_D/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/mul_1"
  op: "Mul"
  input: "discriminator/squeeze"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/mul_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/Sum_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Exp_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/mul"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "discriminator_1/squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_grad/Select"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/GreaterEqual"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_grad/Select_1"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/GreaterEqual"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_grad/zeros_like"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_grad/Select"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_grad/Select_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_grad/Select"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_grad/Select_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/Shape"
  op: "Shape"
  input: "discriminator_1/squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/Shape_1"
  op: "Shape"
  input: "Loss_D/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/Shape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/tuple/control_dependency_1"
  input: "Loss_D/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/squeeze"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/mul_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/Sum_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/Reshape_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Exp_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Log1p_grad/mul"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/ones_like_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/ones_like_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/Loss_D/ones_like_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Exp_grad/mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select_1"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/zeros_like"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1_grad/Select"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/GreaterEqual"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Exp_grad/mul"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1_grad/Select_1"
  op: "Select"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/xentropy/GreaterEqual"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1_grad/zeros_like"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1_grad/Select"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1_grad/Select_1"
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1_grad/Select"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1_grad/Select_1"
  input: "^Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Neg_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Neg_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN"
  op: "AddN"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/squeeze_grad/Shape"
  op: "Shape"
  input: "discriminator/conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/squeeze_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/AddN"
  input: "Optimizer_D/gradients/discriminator/squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_1"
  op: "AddN"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/mul_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/Loss_D/sigmoid_cross_entropy_loss_1/xentropy/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/squeeze_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/squeeze_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/AddN_1"
  input: "Optimizer_D/gradients/discriminator_1/squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Optimizer_D/gradients/discriminator/squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/squeeze_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv4/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/squeeze_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/squeeze_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv4/BiasAdd_grad/BiasAddGrad"
  input: "^Optimizer_D/gradients/discriminator/conv4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Optimizer_D/gradients/discriminator_1/squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/squeeze_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv4/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/squeeze_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/squeeze_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv4/BiasAdd_grad/BiasAddGrad"
  input: "^Optimizer_D/gradients/discriminator_1/conv4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv4/convolution_grad/Shape"
  op: "Shape"
  input: "discriminator/conv2/lrelu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv4/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Optimizer_D/gradients/discriminator/conv4/convolution_grad/Shape"
  input: "discriminator/conv4/weights/read"
  input: "Optimizer_D/gradients/discriminator/conv4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv4/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv4/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "discriminator/conv2/lrelu/add"
  input: "Optimizer_D/gradients/discriminator/conv4/convolution_grad/Shape_1"
  input: "Optimizer_D/gradients/discriminator/conv4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv4/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv4/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_D/gradients/discriminator/conv4/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv4/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv4/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_D/gradients/discriminator/conv4/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv4/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv4/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv4/convolution_grad/Conv2DBackpropFilter"
  input: "^Optimizer_D/gradients/discriminator/conv4/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv4/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv2/lrelu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/Shape"
  input: "discriminator/conv4/weights/read"
  input: "Optimizer_D/gradients/discriminator_1/conv4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "discriminator_1/conv2/lrelu/add"
  input: "Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/Shape_1"
  input: "Optimizer_D/gradients/discriminator_1/conv4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/Conv2DBackpropFilter"
  input: "^Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_2"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv4/BiasAdd_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv4/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/Shape"
  op: "Shape"
  input: "discriminator/conv2/lrelu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/Shape_1"
  op: "Shape"
  input: "discriminator/conv2/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv4/convolution_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv4/convolution_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv2/lrelu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/Shape_1"
  op: "Shape"
  input: "discriminator_1/conv2/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_3"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv4/convolution_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv4/convolution_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv4/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/tuple/control_dependency"
  input: "discriminator/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "discriminator/conv2/lrelu/mul/x"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/Shape_1"
  op: "Shape"
  input: "discriminator/conv2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/tuple/control_dependency_1"
  input: "discriminator/conv2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "discriminator/conv2/lrelu/mul_1/x"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/tuple/control_dependency"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv2/lrelu/mul/x"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Shape_1"
  op: "Shape"
  input: "discriminator_1/conv2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/tuple/control_dependency_1"
  input: "discriminator_1/conv2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv2/lrelu/mul_1/x"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "discriminator/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_4"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv2/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "discriminator/conv2/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/AddN_4"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/AddN_4"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_5"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/AddN_5"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/AddN_5"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "discriminator/conv2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "discriminator/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "discriminator/conv2/convolution"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Neg"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv2/convolution"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Neg"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "discriminator/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "discriminator/conv2/BatchNorm/cond/Merge"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_6"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv2/BatchNorm/cond/Merge"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_grad/cond_grad"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_grad/cond_grad"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_grad/cond_grad:1"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_7"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/AddN_7"
  input: "discriminator/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "discriminator/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "Optimizer_D/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/cond_grad"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/cond_grad"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/cond_grad:1"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_8"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/AddN_8"
  input: "discriminator/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "Optimizer_D/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "discriminator/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_9"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Switch"
  op: "Switch"
  input: "discriminator/conv2/BatchNorm/moments/normalize/mean"
  input: "discriminator/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Shape_1"
  op: "Shape"
  input: "Optimizer_D/gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/zeros"
  op: "Fill"
  input: "Optimizer_D/gradients/Shape_1"
  input: "Optimizer_D/gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Switch_1"
  op: "Switch"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/mean"
  input: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Shape_2"
  op: "Shape"
  input: "Optimizer_D/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/zeros_1"
  op: "Fill"
  input: "Optimizer_D/gradients/Shape_2"
  input: "Optimizer_D/gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/zeros_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_1_grad/cond_grad"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_1_grad/cond_grad"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_1_grad/cond_grad:1"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/cond_grad"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/cond_grad"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/cond_grad:1"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Switch_2"
  op: "Switch"
  input: "discriminator/conv2/BatchNorm/moments/normalize/variance"
  input: "discriminator/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Shape_3"
  op: "Shape"
  input: "Optimizer_D/gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/zeros_2"
  op: "Fill"
  input: "Optimizer_D/gradients/Shape_3"
  input: "Optimizer_D/gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Switch_3"
  op: "Switch"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/variance"
  input: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Shape_4"
  op: "Shape"
  input: "Optimizer_D/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/zeros_3"
  op: "Fill"
  input: "Optimizer_D/gradients/Shape_4"
  input: "Optimizer_D/gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/zeros_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Neg"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Neg"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "discriminator/conv2/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Square_grad/mul/x"
  input: "discriminator/conv2/BatchNorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Square_grad/mul/x"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Shape"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_10"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/AddN_10"
  input: "discriminator/conv2/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "Optimizer_D/gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_11"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/AddN_11"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "Optimizer_D/gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "discriminator/conv2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "discriminator/conv2/convolution"
  input: "discriminator/conv2/BatchNorm/moments/StopGradient"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Shape"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_12"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/divisor_grad/ReciprocalGrad"
  op: "ReciprocalGrad"
  input: "discriminator/conv2/BatchNorm/moments/normalize/divisor"
  input: "Optimizer_D/gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "discriminator_1/conv2/convolution"
  input: "discriminator_1/conv2/BatchNorm/moments/StopGradient"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_13"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/divisor_grad/ReciprocalGrad"
  op: "ReciprocalGrad"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/divisor"
  input: "Optimizer_D/gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Shape"
  input: "discriminator/conv2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  op: "Reshape"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/Const"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/add"
  op: "Add"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/Const"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/mod"
  op: "FloorMod"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/add"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range"
  op: "Range"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range/start"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Fill"
  op: "Fill"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/mod"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/normalize/divisor_grad/ReciprocalGrad"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Tile"
  op: "Tile"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Rank"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range_1/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range_1/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range_1"
  op: "Range"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range_1/start"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Rank"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range_1/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  op: "ListDiff"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  op: "ConcatV2"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Gather"
  op: "Gather"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Prod"
  op: "Prod"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Gather"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Gather_1"
  op: "Gather"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Prod_1"
  op: "Prod"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Gather_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  op: "Transpose"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape_2"
  op: "Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  op: "Pack"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Prod"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod"
  op: "Cumprod"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1"
  op: "Cumprod"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_3"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/transpose_1"
  op: "Transpose"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_3"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/mul_1"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Tile"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_4"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  op: "Reshape"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Const"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/add"
  op: "Add"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Const"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/mod"
  op: "FloorMod"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/add"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range"
  op: "Range"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range/start"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Fill"
  op: "Fill"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/mod"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/divisor_grad/ReciprocalGrad"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Tile"
  op: "Tile"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Rank"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range_1/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range_1/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range_1"
  op: "Range"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range_1/start"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Rank"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range_1/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  op: "ListDiff"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  op: "ConcatV2"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Gather"
  op: "Gather"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Prod"
  op: "Prod"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Gather"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Gather_1"
  op: "Gather"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Prod_1"
  op: "Prod"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Gather_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  op: "Transpose"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape_2"
  op: "Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  op: "Pack"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Prod"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod"
  op: "Cumprod"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1"
  op: "Cumprod"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_3"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/transpose_1"
  op: "Transpose"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_3"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/mul_1"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Tile"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_4"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_14"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/Reshape_grad/Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moments/sufficient_statistics/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  op: "ExpandDims"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/Size"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice"
  op: "StridedSlice"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/concat"
  op: "ConcatV2"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_4"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather/indices"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_15"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/Reshape_grad/Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  op: "ExpandDims"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/Size"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice"
  op: "StridedSlice"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/concat"
  op: "ConcatV2"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_4"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather/indices"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_16"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/convolution_grad/Shape"
  op: "Shape"
  input: "discriminator/conv1/lrelu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Optimizer_D/gradients/discriminator/conv2/convolution_grad/Shape"
  input: "discriminator/conv2/weights/read"
  input: "Optimizer_D/gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "discriminator/conv1/lrelu/add"
  input: "Optimizer_D/gradients/discriminator/conv2/convolution_grad/Shape_1"
  input: "Optimizer_D/gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv2/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_D/gradients/discriminator/conv2/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_D/gradients/discriminator/conv2/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv2/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv2/convolution_grad/Conv2DBackpropFilter"
  input: "^Optimizer_D/gradients/discriminator/conv2/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_17"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv1/lrelu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/Shape"
  input: "discriminator/conv2/weights/read"
  input: "Optimizer_D/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "discriminator_1/conv1/lrelu/add"
  input: "Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/Shape_1"
  input: "Optimizer_D/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/Conv2DBackpropFilter"
  input: "^Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/Shape"
  op: "Shape"
  input: "discriminator/conv1/lrelu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/Shape_1"
  op: "Shape"
  input: "discriminator/conv1/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/convolution_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv2/convolution_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv1/lrelu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/Shape_1"
  op: "Shape"
  input: "discriminator_1/conv1/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_18"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv2/convolution_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv2/convolution_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv2/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/tuple/control_dependency"
  input: "discriminator/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "discriminator/conv1/lrelu/mul/x"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/Shape_1"
  op: "Shape"
  input: "discriminator/conv1/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/tuple/control_dependency_1"
  input: "discriminator/conv1/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "discriminator/conv1/lrelu/mul_1/x"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/tuple/control_dependency"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv1/lrelu/mul/x"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Shape_1"
  op: "Shape"
  input: "discriminator_1/conv1/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/tuple/control_dependency_1"
  input: "discriminator_1/conv1/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv1/lrelu/mul_1/x"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "discriminator/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_19"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv1/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "discriminator/conv1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/AddN_19"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/AddN_19"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_20"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/AddN_20"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/AddN_20"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "discriminator/conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "discriminator/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "discriminator/conv1/convolution"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Neg"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv1/convolution"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Neg"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "discriminator/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "discriminator/conv1/BatchNorm/cond/Merge"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_21"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv1/BatchNorm/cond/Merge"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_grad/cond_grad"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_grad/cond_grad"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_grad/cond_grad:1"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_22"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/AddN_22"
  input: "discriminator/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "discriminator/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "Optimizer_D/gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/cond_grad"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/cond_grad"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/cond_grad:1"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_23"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/AddN_23"
  input: "discriminator/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "Optimizer_D/gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "discriminator/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_24"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Switch_4"
  op: "Switch"
  input: "discriminator/conv1/BatchNorm/moments/normalize/mean"
  input: "discriminator/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Shape_5"
  op: "Shape"
  input: "Optimizer_D/gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/zeros_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/zeros_4"
  op: "Fill"
  input: "Optimizer_D/gradients/Shape_5"
  input: "Optimizer_D/gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/zeros_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Switch_5"
  op: "Switch"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/mean"
  input: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Shape_6"
  op: "Shape"
  input: "Optimizer_D/gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/zeros_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/zeros_5"
  op: "Fill"
  input: "Optimizer_D/gradients/Shape_6"
  input: "Optimizer_D/gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/zeros_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_1_grad/cond_grad"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_1_grad/cond_grad"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_1_grad/cond_grad:1"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/cond_grad"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/cond_grad"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/cond_grad:1"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Switch_6"
  op: "Switch"
  input: "discriminator/conv1/BatchNorm/moments/normalize/variance"
  input: "discriminator/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Shape_7"
  op: "Shape"
  input: "Optimizer_D/gradients/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/zeros_6/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/zeros_6"
  op: "Fill"
  input: "Optimizer_D/gradients/Shape_7"
  input: "Optimizer_D/gradients/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/zeros_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Switch_7"
  op: "Switch"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/variance"
  input: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/Shape_8"
  op: "Shape"
  input: "Optimizer_D/gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/zeros_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/zeros_7"
  op: "Fill"
  input: "Optimizer_D/gradients/Shape_8"
  input: "Optimizer_D/gradients/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/zeros_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Neg"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Neg"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "discriminator/conv1/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Square_grad/mul/x"
  input: "discriminator/conv1/BatchNorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Square_grad/mul/x"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Shape"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_25"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/AddN_25"
  input: "discriminator/conv1/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "Optimizer_D/gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_26"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/AddN_26"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "Optimizer_D/gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "discriminator/conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "discriminator/conv1/convolution"
  input: "discriminator/conv1/BatchNorm/moments/StopGradient"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Shape"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_27"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/divisor_grad/ReciprocalGrad"
  op: "ReciprocalGrad"
  input: "discriminator/conv1/BatchNorm/moments/normalize/divisor"
  input: "Optimizer_D/gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "discriminator_1/conv1/convolution"
  input: "discriminator_1/conv1/BatchNorm/moments/StopGradient"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_28"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/divisor_grad/ReciprocalGrad"
  op: "ReciprocalGrad"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/divisor"
  input: "Optimizer_D/gradients/AddN_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Shape"
  input: "discriminator/conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  op: "Reshape"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/Const"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/add"
  op: "Add"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/Const"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/mod"
  op: "FloorMod"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/add"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range"
  op: "Range"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range/start"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Fill"
  op: "Fill"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/mod"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/normalize/divisor_grad/ReciprocalGrad"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Tile"
  op: "Tile"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Rank"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range_1/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range_1/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range_1"
  op: "Range"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range_1/start"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Rank"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range_1/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  op: "ListDiff"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  op: "ConcatV2"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Gather"
  op: "Gather"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Prod"
  op: "Prod"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Gather"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Gather_1"
  op: "Gather"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Prod_1"
  op: "Prod"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Gather_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  op: "Transpose"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape_2"
  op: "Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  op: "Pack"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Prod"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod"
  op: "Cumprod"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1"
  op: "Cumprod"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_3"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/transpose_1"
  op: "Transpose"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_3"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/mul_1"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Tile"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_4"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  op: "Reshape"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Const"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/add"
  op: "Add"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Const"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/mod"
  op: "FloorMod"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/add"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range"
  op: "Range"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range/start"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Fill"
  op: "Fill"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/mod"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/divisor_grad/ReciprocalGrad"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Tile"
  op: "Tile"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Rank"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range_1/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range_1/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range_1"
  op: "Range"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range_1/start"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Rank"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range_1/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  op: "ListDiff"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  op: "ConcatV2"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Gather"
  op: "Gather"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Prod"
  op: "Prod"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Gather"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Gather_1"
  op: "Gather"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Prod_1"
  op: "Prod"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Gather_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  op: "Transpose"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape_2"
  op: "Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  op: "Pack"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Prod"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod"
  op: "Cumprod"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1"
  op: "Cumprod"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_3"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/transpose_1"
  op: "Transpose"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_3"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/mul_1"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Tile"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_4"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_29"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/Reshape_grad/Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moments/sufficient_statistics/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  op: "ExpandDims"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/Size"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice"
  op: "StridedSlice"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/concat"
  op: "ConcatV2"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_4"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather/indices"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_30"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/Reshape_grad/Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  op: "ExpandDims"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/Size"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice"
  op: "StridedSlice"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/concat"
  op: "ConcatV2"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_4"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather/indices"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_31"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/convolution_grad/Shape"
  op: "Shape"
  input: "discriminator/conv0/lrelu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Optimizer_D/gradients/discriminator/conv1/convolution_grad/Shape"
  input: "discriminator/conv1/weights/read"
  input: "Optimizer_D/gradients/AddN_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "discriminator/conv0/lrelu/add"
  input: "Optimizer_D/gradients/discriminator/conv1/convolution_grad/Shape_1"
  input: "Optimizer_D/gradients/AddN_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv1/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_D/gradients/discriminator/conv1/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_D/gradients/discriminator/conv1/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv1/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv1/convolution_grad/Conv2DBackpropFilter"
  input: "^Optimizer_D/gradients/discriminator/conv1/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_32"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv0/lrelu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/Shape"
  input: "discriminator/conv1/weights/read"
  input: "Optimizer_D/gradients/AddN_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "discriminator_1/conv0/lrelu/add"
  input: "Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/Shape_1"
  input: "Optimizer_D/gradients/AddN_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/Conv2DBackpropFilter"
  input: "^Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/Shape"
  op: "Shape"
  input: "discriminator/conv0/lrelu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/Shape_1"
  op: "Shape"
  input: "discriminator/conv0/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/convolution_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv1/convolution_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv0/lrelu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/Shape_1"
  op: "Shape"
  input: "discriminator_1/conv0/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/tuple/control_dependency"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_33"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv1/convolution_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv1/convolution_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv1/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator/conv0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/tuple/control_dependency"
  input: "discriminator/conv0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "discriminator/conv0/lrelu/mul/x"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/Shape_1"
  op: "Shape"
  input: "discriminator/conv0/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/Shape"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/tuple/control_dependency_1"
  input: "discriminator/conv0/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/mul"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/Sum"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "discriminator/conv0/lrelu/mul_1/x"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator_1/conv0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/tuple/control_dependency"
  input: "discriminator_1/conv0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv0/lrelu/mul/x"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Shape_1"
  op: "Shape"
  input: "discriminator_1/conv0/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Shape"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/tuple/control_dependency_1"
  input: "discriminator_1/conv0/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/mul"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv0/lrelu/mul_1/x"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/mul_1"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Sum_1"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Reshape"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Reshape_1"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "discriminator/conv0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "discriminator_1/conv0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_34"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator/conv0/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Optimizer_D/gradients/AddN_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/AddN_34"
  input: "^Optimizer_D/gradients/discriminator/conv0/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/AddN_34"
  input: "^Optimizer_D/gradients/discriminator/conv0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv0/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv0/BiasAdd_grad/BiasAddGrad"
  input: "^Optimizer_D/gradients/discriminator/conv0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_35"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv0/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Optimizer_D/gradients/AddN_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/AddN_35"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/AddN_35"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv0/BiasAdd_grad/BiasAddGrad"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/convolution_grad/Shape"
  op: "Shape"
  input: "Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Optimizer_D/gradients/discriminator/conv0/convolution_grad/Shape"
  input: "discriminator/conv0/weights/read"
  input: "Optimizer_D/gradients/discriminator/conv0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Reshape"
  input: "Optimizer_D/gradients/discriminator/conv0/convolution_grad/Shape_1"
  input: "Optimizer_D/gradients/discriminator/conv0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator/conv0/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_D/gradients/discriminator/conv0/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv0/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_D/gradients/discriminator/conv0/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv0/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 28
          }
          dim {
            size: 28
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator/conv0/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator/conv0/convolution_grad/Conv2DBackpropFilter"
  input: "^Optimizer_D/gradients/discriminator/conv0/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv0/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/convolution_grad/Shape"
  op: "Shape"
  input: "generator/conv_tp3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Optimizer_D/gradients/discriminator_1/conv0/convolution_grad/Shape"
  input: "discriminator/conv0/weights/read"
  input: "Optimizer_D/gradients/discriminator_1/conv0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/conv_tp3/Tanh"
  input: "Optimizer_D/gradients/discriminator_1/conv0/convolution_grad/Shape_1"
  input: "Optimizer_D/gradients/discriminator_1/conv0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv0/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv0/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 28
          }
          dim {
            size: 28
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/discriminator_1/conv0/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_D/gradients/discriminator_1/conv0/convolution_grad/Conv2DBackpropFilter"
  input: "^Optimizer_D/gradients/discriminator_1/conv0/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator_1/conv0/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_36"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv0/BiasAdd_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv0/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/gradients/AddN_37"
  op: "AddN"
  input: "Optimizer_D/gradients/discriminator/conv0/convolution_grad/tuple/control_dependency_1"
  input: "Optimizer_D/gradients/discriminator_1/conv0/convolution_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_D/gradients/discriminator/conv0/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Optimizer_D/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/beta1_power/Assign"
  op: "Assign"
  input: "Optimizer_D/beta1_power"
  input: "Optimizer_D/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/beta1_power/read"
  op: "Identity"
  input: "Optimizer_D/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "Optimizer_D/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/beta2_power/Assign"
  op: "Assign"
  input: "Optimizer_D/beta2_power"
  input: "Optimizer_D/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/beta2_power/read"
  op: "Identity"
  input: "Optimizer_D/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv0/weights/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv0/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv0/weights/Adam/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv0/weights/Adam"
  input: "Optimizer_D/discriminator/conv0/weights/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv0/weights/Adam/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv0/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv0/weights/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv0/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv0/weights/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv0/weights/Adam_1"
  input: "Optimizer_D/discriminator/conv0/weights/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv0/weights/Adam_1/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv0/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv0/biases/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv0/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv0/biases/Adam/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv0/biases/Adam"
  input: "Optimizer_D/discriminator/conv0/biases/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv0/biases/Adam/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv0/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv0/biases/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv0/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv0/biases/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv0/biases/Adam_1"
  input: "Optimizer_D/discriminator/conv0/biases/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv0/biases/Adam_1/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv0/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/weights/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/weights/Adam/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv1/weights/Adam"
  input: "Optimizer_D/discriminator/conv1/weights/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/weights/Adam/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/weights/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/weights/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv1/weights/Adam_1"
  input: "Optimizer_D/discriminator/conv1/weights/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/weights/Adam_1/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam_1"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam_1"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam_1/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/weights/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/weights/Adam/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv2/weights/Adam"
  input: "Optimizer_D/discriminator/conv2/weights/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/weights/Adam/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv2/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/weights/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/weights/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv2/weights/Adam_1"
  input: "Optimizer_D/discriminator/conv2/weights/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/weights/Adam_1/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv2/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam_1"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam_1"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam_1/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv4/weights/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv4/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv4/weights/Adam/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv4/weights/Adam"
  input: "Optimizer_D/discriminator/conv4/weights/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv4/weights/Adam/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv4/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv4/weights/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv4/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv4/weights/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv4/weights/Adam_1"
  input: "Optimizer_D/discriminator/conv4/weights/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv4/weights/Adam_1/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv4/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv4/biases/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv4/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv4/biases/Adam/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv4/biases/Adam"
  input: "Optimizer_D/discriminator/conv4/biases/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv4/biases/Adam/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv4/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv4/biases/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv4/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv4/biases/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv4/biases/Adam_1"
  input: "Optimizer_D/discriminator/conv4/biases/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/discriminator/conv4/biases/Adam_1/read"
  op: "Identity"
  input: "Optimizer_D/discriminator/conv4/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.000199999994948
      }
    }
  }
}
node {
  name: "Optimizer_D/Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Optimizer_D/Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "Optimizer_D/Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "Optimizer_D/Adam/update_discriminator/conv0/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/conv0/weights"
  input: "Optimizer_D/discriminator/conv0/weights/Adam"
  input: "Optimizer_D/discriminator/conv0/weights/Adam_1"
  input: "Optimizer_D/beta1_power/read"
  input: "Optimizer_D/beta2_power/read"
  input: "Optimizer_D/Adam/learning_rate"
  input: "Optimizer_D/Adam/beta1"
  input: "Optimizer_D/Adam/beta2"
  input: "Optimizer_D/Adam/epsilon"
  input: "Optimizer_D/gradients/AddN_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/Adam/update_discriminator/conv0/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/conv0/biases"
  input: "Optimizer_D/discriminator/conv0/biases/Adam"
  input: "Optimizer_D/discriminator/conv0/biases/Adam_1"
  input: "Optimizer_D/beta1_power/read"
  input: "Optimizer_D/beta2_power/read"
  input: "Optimizer_D/Adam/learning_rate"
  input: "Optimizer_D/Adam/beta1"
  input: "Optimizer_D/Adam/beta2"
  input: "Optimizer_D/Adam/epsilon"
  input: "Optimizer_D/gradients/AddN_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/Adam/update_discriminator/conv1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/conv1/weights"
  input: "Optimizer_D/discriminator/conv1/weights/Adam"
  input: "Optimizer_D/discriminator/conv1/weights/Adam_1"
  input: "Optimizer_D/beta1_power/read"
  input: "Optimizer_D/beta2_power/read"
  input: "Optimizer_D/Adam/learning_rate"
  input: "Optimizer_D/Adam/beta1"
  input: "Optimizer_D/Adam/beta2"
  input: "Optimizer_D/Adam/epsilon"
  input: "Optimizer_D/gradients/AddN_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/Adam/update_discriminator/conv1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/conv1/BatchNorm/beta"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam_1"
  input: "Optimizer_D/beta1_power/read"
  input: "Optimizer_D/beta2_power/read"
  input: "Optimizer_D/Adam/learning_rate"
  input: "Optimizer_D/Adam/beta1"
  input: "Optimizer_D/Adam/beta2"
  input: "Optimizer_D/Adam/epsilon"
  input: "Optimizer_D/gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/Adam/update_discriminator/conv1/BatchNorm/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/conv1/BatchNorm/gamma"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam_1"
  input: "Optimizer_D/beta1_power/read"
  input: "Optimizer_D/beta2_power/read"
  input: "Optimizer_D/Adam/learning_rate"
  input: "Optimizer_D/Adam/beta1"
  input: "Optimizer_D/Adam/beta2"
  input: "Optimizer_D/Adam/epsilon"
  input: "Optimizer_D/gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/Adam/update_discriminator/conv2/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/conv2/weights"
  input: "Optimizer_D/discriminator/conv2/weights/Adam"
  input: "Optimizer_D/discriminator/conv2/weights/Adam_1"
  input: "Optimizer_D/beta1_power/read"
  input: "Optimizer_D/beta2_power/read"
  input: "Optimizer_D/Adam/learning_rate"
  input: "Optimizer_D/Adam/beta1"
  input: "Optimizer_D/Adam/beta2"
  input: "Optimizer_D/Adam/epsilon"
  input: "Optimizer_D/gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/Adam/update_discriminator/conv2/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/conv2/BatchNorm/beta"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam_1"
  input: "Optimizer_D/beta1_power/read"
  input: "Optimizer_D/beta2_power/read"
  input: "Optimizer_D/Adam/learning_rate"
  input: "Optimizer_D/Adam/beta1"
  input: "Optimizer_D/Adam/beta2"
  input: "Optimizer_D/Adam/epsilon"
  input: "Optimizer_D/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/Adam/update_discriminator/conv2/BatchNorm/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/conv2/BatchNorm/gamma"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam_1"
  input: "Optimizer_D/beta1_power/read"
  input: "Optimizer_D/beta2_power/read"
  input: "Optimizer_D/Adam/learning_rate"
  input: "Optimizer_D/Adam/beta1"
  input: "Optimizer_D/Adam/beta2"
  input: "Optimizer_D/Adam/epsilon"
  input: "Optimizer_D/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/Adam/update_discriminator/conv4/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/conv4/weights"
  input: "Optimizer_D/discriminator/conv4/weights/Adam"
  input: "Optimizer_D/discriminator/conv4/weights/Adam_1"
  input: "Optimizer_D/beta1_power/read"
  input: "Optimizer_D/beta2_power/read"
  input: "Optimizer_D/Adam/learning_rate"
  input: "Optimizer_D/Adam/beta1"
  input: "Optimizer_D/Adam/beta2"
  input: "Optimizer_D/Adam/epsilon"
  input: "Optimizer_D/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/Adam/update_discriminator/conv4/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/conv4/biases"
  input: "Optimizer_D/discriminator/conv4/biases/Adam"
  input: "Optimizer_D/discriminator/conv4/biases/Adam_1"
  input: "Optimizer_D/beta1_power/read"
  input: "Optimizer_D/beta2_power/read"
  input: "Optimizer_D/Adam/learning_rate"
  input: "Optimizer_D/Adam/beta1"
  input: "Optimizer_D/Adam/beta2"
  input: "Optimizer_D/Adam/epsilon"
  input: "Optimizer_D/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_D/Adam/mul"
  op: "Mul"
  input: "Optimizer_D/beta1_power/read"
  input: "Optimizer_D/Adam/beta1"
  input: "^Optimizer_D/Adam/update_discriminator/conv0/weights/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv0/biases/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv1/weights/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv1/BatchNorm/beta/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv1/BatchNorm/gamma/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv2/weights/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv2/BatchNorm/beta/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv2/BatchNorm/gamma/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv4/weights/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv4/biases/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/Adam/Assign"
  op: "Assign"
  input: "Optimizer_D/beta1_power"
  input: "Optimizer_D/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/Adam/mul_1"
  op: "Mul"
  input: "Optimizer_D/beta2_power/read"
  input: "Optimizer_D/Adam/beta2"
  input: "^Optimizer_D/Adam/update_discriminator/conv0/weights/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv0/biases/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv1/weights/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv1/BatchNorm/beta/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv1/BatchNorm/gamma/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv2/weights/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv2/BatchNorm/beta/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv2/BatchNorm/gamma/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv4/weights/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv4/biases/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_D/Adam/Assign_1"
  op: "Assign"
  input: "Optimizer_D/beta2_power"
  input: "Optimizer_D/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_D/Adam/update"
  op: "NoOp"
  input: "^Optimizer_D/Adam/update_discriminator/conv0/weights/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv0/biases/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv1/weights/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv1/BatchNorm/beta/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv1/BatchNorm/gamma/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv2/weights/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv2/BatchNorm/beta/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv2/BatchNorm/gamma/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv4/weights/ApplyAdam"
  input: "^Optimizer_D/Adam/update_discriminator/conv4/biases/ApplyAdam"
  input: "^Optimizer_D/Adam/Assign"
  input: "^Optimizer_D/Adam/Assign_1"
}
node {
  name: "Optimizer_D/Adam/value"
  op: "Const"
  input: "^Optimizer_D/Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_D/Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Optimizer_D/Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Fill"
  op: "Fill"
  input: "Optimizer_G/gradients/Shape"
  input: "Optimizer_G/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/value_grad/zeros_like"
  op: "ZerosLike"
  input: "Loss_G/sigmoid_cross_entropy_loss/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/value_grad/Select"
  op: "Select"
  input: "Loss_G/sigmoid_cross_entropy_loss/Greater"
  input: "Optimizer_G/gradients/Fill"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/value_grad/Select_1"
  op: "Select"
  input: "Loss_G/sigmoid_cross_entropy_loss/Greater"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/value_grad/zeros_like"
  input: "Optimizer_G/gradients/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/value_grad/Select"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/value_grad/Select_1"
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/value_grad/Select"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/value_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/value_grad/Select_1"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/value_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Shape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/RealDiv"
  op: "RealDiv"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "Loss_G/sigmoid_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/RealDiv"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Neg"
  op: "Neg"
  input: "Loss_G/sigmoid_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Neg"
  input: "Loss_G/sigmoid_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/RealDiv_1"
  input: "Loss_G/sigmoid_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/mul"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Sum_1"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Reshape"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Reshape"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Reshape_1"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "Loss_G/sigmoid_cross_entropy_loss/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Select_grad/Select"
  op: "Select"
  input: "Loss_G/sigmoid_cross_entropy_loss/Equal"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Select_grad/Select_1"
  op: "Select"
  input: "Loss_G/sigmoid_cross_entropy_loss/Equal"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Select_grad/zeros_like"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Select_grad/Select"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Select_grad/Select_1"
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Select_grad/Select"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Select_grad/Select_1"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/div_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Sum_1_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Sum_1_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Sum_1_grad/Tile"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "Loss_G/sigmoid_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Sum_grad/Reshape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Select_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present_grad/Shape"
  op: "Shape"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present_grad/Tile"
  op: "Tile"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present_grad/Reshape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/Shape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Sum_grad/Tile"
  input: "Loss_G/sigmoid_cross_entropy_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/mul"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/mul_1"
  op: "Mul"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/mul_1"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/Sum_1"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Shape_1"
  op: "Shape"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Shape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present_grad/Tile"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/mul"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/mul_1"
  op: "Mul"
  input: "Loss_G/sigmoid_cross_entropy_loss/num_present/Select"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/mul_1"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Sum_1"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/Shape"
  op: "Shape"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/Shape_1"
  op: "Shape"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/Shape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/Sum_1"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/Reshape"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/Reshape"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/Reshape_1"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Shape"
  op: "Shape"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Shape_1"
  op: "Shape"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Shape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Neg"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape_1"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/add/x"
  op: "Const"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/add"
  op: "Add"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/add/x"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "discriminator_1/squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
  op: "Select"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select_1"
  op: "Select"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_grad/zeros_like"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select_1"
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select_1"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/Shape"
  op: "Shape"
  input: "discriminator_1/squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/Shape_1"
  op: "Shape"
  input: "Loss_G/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/Shape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency_1"
  input: "Loss_G/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/mul"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/squeeze"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/mul_1"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/Sum_1"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape_1"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Exp_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/mul"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/ones_like_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/ones_like_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/Loss_G/ones_like_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select"
  op: "Select"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Exp_grad/mul"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select_1"
  op: "Select"
  input: "Loss_G/sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/zeros_like"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select_1"
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select_1"
  input: "^Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Neg_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN"
  op: "AddN"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/Loss_G/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/squeeze_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/squeeze_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/AddN"
  input: "Optimizer_G/gradients/discriminator_1/squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Optimizer_G/gradients/discriminator_1/squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/squeeze_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv4/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/squeeze_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/squeeze_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv4/BiasAdd_grad/BiasAddGrad"
  input: "^Optimizer_G/gradients/discriminator_1/conv4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv2/lrelu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/Shape"
  input: "discriminator/conv4/weights/read"
  input: "Optimizer_G/gradients/discriminator_1/conv4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "discriminator_1/conv2/lrelu/add"
  input: "Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/Shape_1"
  input: "Optimizer_G/gradients/discriminator_1/conv4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/Conv2DBackpropFilter"
  input: "^Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv2/lrelu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/Shape_1"
  op: "Shape"
  input: "discriminator_1/conv2/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv4/convolution_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/tuple/control_dependency"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv2/lrelu/mul/x"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Shape_1"
  op: "Shape"
  input: "discriminator_1/conv2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/tuple/control_dependency_1"
  input: "discriminator_1/conv2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv2/lrelu/mul_1/x"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_1"
  op: "AddN"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/AddN_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/AddN_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv2/convolution"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Neg"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv2/BatchNorm/cond/Merge"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/cond_grad"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/cond_grad"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/cond_grad:1"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_2"
  op: "AddN"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/AddN_2"
  input: "discriminator/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "Optimizer_G/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "discriminator_1/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Switch"
  op: "Switch"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/mean"
  input: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Shape_1"
  op: "Shape"
  input: "Optimizer_G/gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros"
  op: "Fill"
  input: "Optimizer_G/gradients/Shape_1"
  input: "Optimizer_G/gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/cond_grad"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/cond_grad"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/cond_grad:1"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Switch_1"
  op: "Switch"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/variance"
  input: "discriminator_1/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Shape_2"
  op: "Shape"
  input: "Optimizer_G/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros_1"
  op: "Fill"
  input: "Optimizer_G/gradients/Shape_2"
  input: "Optimizer_G/gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/zeros_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Neg"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Square_grad/mul/x"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_3"
  op: "AddN"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/AddN_3"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "Optimizer_G/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "discriminator_1/conv2/convolution"
  input: "discriminator_1/conv2/BatchNorm/moments/StopGradient"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_4"
  op: "AddN"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/divisor_grad/ReciprocalGrad"
  op: "ReciprocalGrad"
  input: "discriminator_1/conv2/BatchNorm/moments/normalize/divisor"
  input: "Optimizer_G/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  op: "Reshape"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Const"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/add"
  op: "Add"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Const"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/mod"
  op: "FloorMod"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/add"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range"
  op: "Range"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range/start"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Fill"
  op: "Fill"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/mod"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/normalize/divisor_grad/ReciprocalGrad"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Tile"
  op: "Tile"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Rank"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range_1/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range_1/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range_1"
  op: "Range"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range_1/start"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Rank"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range_1/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  op: "ListDiff"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/range_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  op: "ConcatV2"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Gather"
  op: "Gather"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Prod"
  op: "Prod"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Gather"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Gather_1"
  op: "Gather"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Prod_1"
  op: "Prod"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Gather_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  op: "Transpose"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape_2"
  op: "Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  op: "Pack"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Prod"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod"
  op: "Cumprod"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1"
  op: "Cumprod"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_3"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/transpose_1"
  op: "Transpose"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_3"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/mul_1"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Tile"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_4"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_5"
  op: "AddN"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/Reshape_grad/Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  op: "ExpandDims"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/Size"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice"
  op: "StridedSlice"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/concat"
  op: "ConcatV2"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_4"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather/indices"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_6"
  op: "AddN"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv1/lrelu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/Shape"
  input: "discriminator/conv2/weights/read"
  input: "Optimizer_G/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "discriminator_1/conv1/lrelu/add"
  input: "Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/Shape_1"
  input: "Optimizer_G/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/Conv2DBackpropFilter"
  input: "^Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv1/lrelu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/Shape_1"
  op: "Shape"
  input: "discriminator_1/conv1/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv2/convolution_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/tuple/control_dependency"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv1/lrelu/mul/x"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Shape_1"
  op: "Shape"
  input: "discriminator_1/conv1/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/tuple/control_dependency_1"
  input: "discriminator_1/conv1/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv1/lrelu/mul_1/x"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_7"
  op: "AddN"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/AddN_7"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/AddN_7"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv1/convolution"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Neg"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv1/BatchNorm/cond/Merge"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/cond_grad"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/cond_grad"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/cond_grad:1"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_8"
  op: "AddN"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/AddN_8"
  input: "discriminator/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "Optimizer_G/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "discriminator_1/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Switch_2"
  op: "Switch"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/mean"
  input: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Shape_3"
  op: "Shape"
  input: "Optimizer_G/gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros_2"
  op: "Fill"
  input: "Optimizer_G/gradients/Shape_3"
  input: "Optimizer_G/gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/cond_grad"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/cond_grad"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/cond_grad:1"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Switch_3"
  op: "Switch"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/variance"
  input: "discriminator_1/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Shape_4"
  op: "Shape"
  input: "Optimizer_G/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros_3"
  op: "Fill"
  input: "Optimizer_G/gradients/Shape_4"
  input: "Optimizer_G/gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/zeros_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Neg"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Square_grad/mul/x"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_9"
  op: "AddN"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/AddN_9"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "Optimizer_G/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "discriminator_1/conv1/convolution"
  input: "discriminator_1/conv1/BatchNorm/moments/StopGradient"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_10"
  op: "AddN"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/divisor_grad/ReciprocalGrad"
  op: "ReciprocalGrad"
  input: "discriminator_1/conv1/BatchNorm/moments/normalize/divisor"
  input: "Optimizer_G/gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  op: "Reshape"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Const"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/add"
  op: "Add"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Const"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/mod"
  op: "FloorMod"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/add"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range"
  op: "Range"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range/start"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Fill"
  op: "Fill"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/mod"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/normalize/divisor_grad/ReciprocalGrad"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Tile"
  op: "Tile"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Rank"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range_1/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range_1/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range_1"
  op: "Range"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range_1/start"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Rank"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range_1/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  op: "ListDiff"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/range_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  op: "ConcatV2"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Gather"
  op: "Gather"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Prod"
  op: "Prod"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Gather"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Gather_1"
  op: "Gather"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Prod_1"
  op: "Prod"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Gather_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  op: "Transpose"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape_2"
  op: "Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  op: "Pack"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Prod"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod"
  op: "Cumprod"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1"
  op: "Cumprod"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_3"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/transpose_1"
  op: "Transpose"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_3"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/mul_1"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Tile"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_4"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_11"
  op: "AddN"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/Reshape_grad/Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  op: "ExpandDims"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/Size"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice"
  op: "StridedSlice"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/concat"
  op: "ConcatV2"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_4"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather/indices"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_12"
  op: "AddN"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv0/lrelu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/Shape"
  input: "discriminator/conv1/weights/read"
  input: "Optimizer_G/gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "discriminator_1/conv0/lrelu/add"
  input: "Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/Shape_1"
  input: "Optimizer_G/gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/Conv2DBackpropFilter"
  input: "^Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/Shape"
  op: "Shape"
  input: "discriminator_1/conv0/lrelu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/Shape_1"
  op: "Shape"
  input: "discriminator_1/conv0/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv1/convolution_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator_1/conv0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/tuple/control_dependency"
  input: "discriminator_1/conv0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv0/lrelu/mul/x"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Shape_1"
  op: "Shape"
  input: "discriminator_1/conv0/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Shape"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/tuple/control_dependency_1"
  input: "discriminator_1/conv0/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/mul"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "discriminator_1/conv0/lrelu/mul_1/x"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/mul_1"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Sum_1"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Reshape"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Reshape_1"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "discriminator_1/conv0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_13"
  op: "AddN"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/discriminator_1/conv0/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Optimizer_G/gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/AddN_13"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/AddN_13"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv0/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv0/BiasAdd_grad/BiasAddGrad"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/convolution_grad/Shape"
  op: "Shape"
  input: "generator/conv_tp3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Optimizer_G/gradients/discriminator_1/conv0/convolution_grad/Shape"
  input: "discriminator/conv0/weights/read"
  input: "Optimizer_G/gradients/discriminator_1/conv0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/conv_tp3/Tanh"
  input: "Optimizer_G/gradients/discriminator_1/conv0/convolution_grad/Shape_1"
  input: "Optimizer_G/gradients/discriminator_1/conv0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv0/convolution_grad/Conv2DBackpropInput"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv0/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 28
          }
          dim {
            size: 28
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/discriminator_1/conv0/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/discriminator_1/conv0/convolution_grad/Conv2DBackpropFilter"
  input: "^Optimizer_G/gradients/discriminator_1/conv0/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/discriminator_1/conv0/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp3/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "generator/conv_tp3/Tanh"
  input: "Optimizer_G/gradients/discriminator_1/conv0/convolution_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 28
          }
          dim {
            size: 28
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Optimizer_G/gradients/generator/conv_tp3/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp3/Tanh_grad/TanhGrad"
  input: "^Optimizer_G/gradients/generator/conv_tp3/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp3/Tanh_grad/TanhGrad"
  input: "^Optimizer_G/gradients/generator/conv_tp3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp3/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 28
          }
          dim {
            size: 28
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp3/BiasAdd_grad/BiasAddGrad"
  input: "^Optimizer_G/gradients/generator/conv_tp3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp3/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp3/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Optimizer_G/gradients/generator/conv_tp3/BiasAdd_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/generator/conv_tp3/conv2d_transpose_grad/Shape"
  input: "generator/conv_tp1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp3/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "Optimizer_G/gradients/generator/conv_tp3/BiasAdd_grad/tuple/control_dependency"
  input: "generator/conv_tp3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp3/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp3/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^Optimizer_G/gradients/generator/conv_tp3/conv2d_transpose_grad/Conv2D"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp3/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp3/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^Optimizer_G/gradients/generator/conv_tp3/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp3/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp3/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp3/conv2d_transpose_grad/Conv2D"
  input: "^Optimizer_G/gradients/generator/conv_tp3/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp3/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "Optimizer_G/gradients/generator/conv_tp3/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "generator/conv_tp1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "generator/conv_tp1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/Relu_grad/ReluGrad"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/Relu_grad/ReluGrad"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "generator/conv_tp1/conv2d_transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/conv_tp1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/mul"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "generator/conv_tp1/conv2d_transpose"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/mul_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Neg"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/conv_tp1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/mul"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "generator/conv_tp1/BatchNorm/cond/Merge"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/mul_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator/conv_tp1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_grad/cond_grad"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_grad/cond_grad"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_grad/cond_grad:1"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_14"
  op: "AddN"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/AddN_14"
  input: "generator/conv_tp1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/mul"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "generator/conv_tp1/BatchNorm/batchnorm/Rsqrt"
  input: "Optimizer_G/gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/mul_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/conv_tp1/BatchNorm/batchnorm/Rsqrt"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Switch_4"
  op: "Switch"
  input: "generator/conv_tp1/BatchNorm/moments/normalize/mean"
  input: "generator/conv_tp1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Shape_5"
  op: "Shape"
  input: "Optimizer_G/gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros_4"
  op: "Fill"
  input: "Optimizer_G/gradients/Shape_5"
  input: "Optimizer_G/gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/zeros_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator/conv_tp1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_1_grad/cond_grad"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_1_grad/cond_grad"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_1_grad/cond_grad:1"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Switch_5"
  op: "Switch"
  input: "generator/conv_tp1/BatchNorm/moments/normalize/variance"
  input: "generator/conv_tp1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Shape_6"
  op: "Shape"
  input: "Optimizer_G/gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros_5"
  op: "Fill"
  input: "Optimizer_G/gradients/Shape_6"
  input: "Optimizer_G/gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/zeros_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Neg"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "generator/conv_tp1/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/mul"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/mul_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Square_grad/mul/x"
  input: "generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Shape"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_15"
  op: "AddN"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/AddN_15"
  input: "generator/conv_tp1/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/mul"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "Optimizer_G/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "generator/conv_tp1/conv2d_transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/conv_tp1/conv2d_transpose"
  input: "generator/conv_tp1/BatchNorm/moments/StopGradient"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Shape"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_16"
  op: "AddN"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/divisor_grad/ReciprocalGrad"
  op: "ReciprocalGrad"
  input: "generator/conv_tp1/BatchNorm/moments/normalize/divisor"
  input: "Optimizer_G/gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Shape"
  input: "generator/conv_tp1/conv2d_transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  op: "Reshape"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Const"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/add"
  op: "Add"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Const"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/mod"
  op: "FloorMod"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/add"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/range"
  op: "Range"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/range/start"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Fill"
  op: "Fill"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Shape_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/range"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/mod"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/normalize/divisor_grad/ReciprocalGrad"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Tile"
  op: "Tile"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Rank"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/range_1/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/range_1/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/range_1"
  op: "Range"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/range_1/start"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Rank"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/range_1/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  op: "ListDiff"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/range_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  op: "ConcatV2"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Gather"
  op: "Gather"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Prod"
  op: "Prod"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Gather"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Gather_1"
  op: "Gather"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Prod_1"
  op: "Prod"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Gather_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  op: "Transpose"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Shape_2"
  op: "Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  op: "Pack"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Prod"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod"
  op: "Cumprod"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1"
  op: "Cumprod"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_3"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/mul"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/transpose_1"
  op: "Transpose"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_3"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/mul_1"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Tile"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_4"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/mul_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_17"
  op: "AddN"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/Reshape_grad/Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  op: "ExpandDims"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/Size"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice"
  op: "StridedSlice"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/concat"
  op: "ConcatV2"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_4"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/Reshape_1"
  op: "Reshape"
  input: "generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather/indices"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_18"
  op: "AddN"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Optimizer_G/gradients/AddN_18"
  input: "Optimizer_G/gradients/generator/conv_tp1/conv2d_transpose_grad/Shape"
  input: "generator/conv_tp0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "Optimizer_G/gradients/AddN_18"
  input: "generator/conv_tp1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp1/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^Optimizer_G/gradients/generator/conv_tp1/conv2d_transpose_grad/Conv2D"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^Optimizer_G/gradients/generator/conv_tp1/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp1/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp1/conv2d_transpose_grad/Conv2D"
  input: "^Optimizer_G/gradients/generator/conv_tp1/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp1/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "Optimizer_G/gradients/generator/conv_tp1/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "generator/conv_tp0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "generator/conv_tp0/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/Relu_grad/ReluGrad"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/Relu_grad/ReluGrad"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "generator/conv_tp0/conv2d_transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/conv_tp0/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/mul"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "generator/conv_tp0/conv2d_transpose"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/mul_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Neg"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/conv_tp0/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/mul"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "generator/conv_tp0/BatchNorm/cond/Merge"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/mul_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator/conv_tp0/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_grad/cond_grad"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_grad/cond_grad"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_grad/cond_grad:1"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_19"
  op: "AddN"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/AddN_19"
  input: "generator/conv_tp0/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/mul"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "generator/conv_tp0/BatchNorm/batchnorm/Rsqrt"
  input: "Optimizer_G/gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/mul_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/conv_tp0/BatchNorm/batchnorm/Rsqrt"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Switch_6"
  op: "Switch"
  input: "generator/conv_tp0/BatchNorm/moments/normalize/mean"
  input: "generator/conv_tp0/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Shape_7"
  op: "Shape"
  input: "Optimizer_G/gradients/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros_6/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros_6"
  op: "Fill"
  input: "Optimizer_G/gradients/Shape_7"
  input: "Optimizer_G/gradients/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/zeros_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator/conv_tp0/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_1_grad/cond_grad"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_1_grad/cond_grad"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_1_grad/cond_grad:1"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Switch_7"
  op: "Switch"
  input: "generator/conv_tp0/BatchNorm/moments/normalize/variance"
  input: "generator/conv_tp0/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Shape_8"
  op: "Shape"
  input: "Optimizer_G/gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros_7"
  op: "Fill"
  input: "Optimizer_G/gradients/Shape_8"
  input: "Optimizer_G/gradients/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/zeros_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Neg"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "generator/conv_tp0/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/mul"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/mul_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Square_grad/mul/x"
  input: "generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Shape"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_20"
  op: "AddN"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/AddN_20"
  input: "generator/conv_tp0/BatchNorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/mul"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss"
  input: "Optimizer_G/gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "generator/conv_tp0/conv2d_transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/conv_tp0/conv2d_transpose"
  input: "generator/conv_tp0/BatchNorm/moments/StopGradient"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Shape"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_21"
  op: "AddN"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/divisor_grad/ReciprocalGrad"
  op: "ReciprocalGrad"
  input: "generator/conv_tp0/BatchNorm/moments/normalize/divisor"
  input: "Optimizer_G/gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Shape"
  input: "generator/conv_tp0/conv2d_transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  op: "Reshape"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Const"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/add"
  op: "Add"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Const"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/mod"
  op: "FloorMod"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/add"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/range"
  op: "Range"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/range/start"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Size"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Fill"
  op: "Fill"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Shape_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/range"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/mod"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/normalize/divisor_grad/ReciprocalGrad"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Tile"
  op: "Tile"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Rank"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/range_1/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/range_1/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/range_1"
  op: "Range"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/range_1/start"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Rank"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/range_1/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  op: "ListDiff"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/range_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  op: "ConcatV2"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Gather"
  op: "Gather"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Prod"
  op: "Prod"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Gather"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Gather_1"
  op: "Gather"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/ListDiff"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Prod_1"
  op: "Prod"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Gather_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  op: "Transpose"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Shape_2"
  op: "Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  op: "Pack"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Prod"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/transpose"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod"
  op: "Cumprod"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1"
  op: "Cumprod"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Cumprod_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_3"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/mul"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/transpose_1"
  op: "Transpose"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_3"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/mul_1"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Tile"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_4"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/mul_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_22"
  op: "AddN"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/Reshape_grad/Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  op: "ExpandDims"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/Size"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice"
  op: "StridedSlice"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/Shape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/concat"
  op: "ConcatV2"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/strided_slice"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/count_grad/Reshape_4"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/Reshape_1"
  op: "Reshape"
  input: "generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather/indices"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_23"
  op: "AddN"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Optimizer_G/gradients/AddN_23"
  input: "Optimizer_G/gradients/generator/conv_tp0/conv2d_transpose_grad/Shape"
  input: "generator/batch_norm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "Optimizer_G/gradients/AddN_23"
  input: "generator/conv_tp0/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/conv_tp0/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^Optimizer_G/gradients/generator/conv_tp0/conv2d_transpose_grad/Conv2D"
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^Optimizer_G/gradients/generator/conv_tp0/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/conv_tp0/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/conv_tp0/conv2d_transpose_grad/Conv2D"
  input: "^Optimizer_G/gradients/generator/conv_tp0/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/conv_tp0/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "generator/batch_norm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/conv_tp0/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "generator/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/batch_norm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/mul"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "generator/Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/mul_1"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Neg"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/batch_norm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/mul"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "generator/batch_norm/cond/Merge"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/mul_1"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator/batch_norm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/batch_norm/cond/Merge_grad/cond_grad"
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/cond/Merge_grad/cond_grad"
  input: "^Optimizer_G/gradients/generator/batch_norm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/cond/Merge_grad/cond_grad:1"
  input: "^Optimizer_G/gradients/generator/batch_norm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_24"
  op: "AddN"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/AddN_24"
  input: "generator/batch_norm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/mul"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "generator/batch_norm/batchnorm/Rsqrt"
  input: "Optimizer_G/gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/mul_1"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/batch_norm/batchnorm/Rsqrt"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Switch_8"
  op: "Switch"
  input: "generator/batch_norm/moments/normalize/mean"
  input: "generator/batch_norm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Shape_9"
  op: "Shape"
  input: "Optimizer_G/gradients/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros_8/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros_8"
  op: "Fill"
  input: "Optimizer_G/gradients/Shape_9"
  input: "Optimizer_G/gradients/zeros_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "Optimizer_G/gradients/generator/batch_norm/cond/Merge_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/zeros_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/cond/AssignMovingAvg/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator/batch_norm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/batch_norm/cond/Merge_1_grad/cond_grad"
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/cond/Merge_1_grad/cond_grad"
  input: "^Optimizer_G/gradients/generator/batch_norm/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/cond/Merge_1_grad/cond_grad:1"
  input: "^Optimizer_G/gradients/generator/batch_norm/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Switch_9"
  op: "Switch"
  input: "generator/batch_norm/moments/normalize/variance"
  input: "generator/batch_norm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/Shape_10"
  op: "Shape"
  input: "Optimizer_G/gradients/Switch_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros_9/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/zeros_9"
  op: "Fill"
  input: "Optimizer_G/gradients/Shape_10"
  input: "Optimizer_G/gradients/zeros_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "Optimizer_G/gradients/generator/batch_norm/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/zeros_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/cond/AssignMovingAvg_1/sub/Switch_1_grad/cond_grad"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Neg"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "generator/batch_norm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/mul"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "generator/batch_norm/moments/sufficient_statistics/var_ss"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/mul_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Square_grad/mul/x"
  input: "generator/batch_norm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Shape"
  input: "generator/batch_norm/moments/sufficient_statistics/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "generator/batch_norm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/add"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/range"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_25"
  op: "AddN"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/AddN_25"
  input: "generator/batch_norm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/mul"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "generator/batch_norm/moments/sufficient_statistics/mean_ss"
  input: "Optimizer_G/gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/mul_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "generator/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/Reshape"
  input: "generator/batch_norm/moments/StopGradient"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Shape"
  input: "generator/batch_norm/moments/sufficient_statistics/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "generator/batch_norm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_26"
  op: "AddN"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/divisor_grad/ReciprocalGrad"
  op: "ReciprocalGrad"
  input: "generator/batch_norm/moments/normalize/divisor"
  input: "Optimizer_G/gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Shape"
  input: "generator/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Reshape"
  op: "Reshape"
  input: "generator/batch_norm/moments/sufficient_statistics/Const"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/add"
  op: "Add"
  input: "generator/batch_norm/moments/sufficient_statistics/Const"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/mod"
  op: "FloorMod"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/add"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/range"
  op: "Range"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/range/start"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Size"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Fill"
  op: "Fill"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Shape_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/range"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/mod"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Maximum"
  op: "Maximum"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/DynamicStitch"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/normalize/divisor_grad/ReciprocalGrad"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Tile"
  op: "Tile"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Reshape_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Rank"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/range_1/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/range_1/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/range_1"
  op: "Range"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/range_1/start"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Rank"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/range_1/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/ListDiff"
  op: "ListDiff"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/range_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/concat"
  op: "ConcatV2"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/ListDiff"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Gather"
  op: "Gather"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Prod"
  op: "Prod"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Gather"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Gather_1"
  op: "Gather"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/ListDiff"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Prod_1"
  op: "Prod"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Gather_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/transpose"
  op: "Transpose"
  input: "generator/batch_norm/moments/sufficient_statistics/Gather"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Shape_2"
  op: "Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  op: "Pack"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Prod"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Reshape_2"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/transpose"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Cumprod"
  op: "Cumprod"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Cumprod_1"
  op: "Cumprod"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/mul"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Cumprod"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Cumprod_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Reshape_3"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/mul"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/transpose_1"
  op: "Transpose"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Reshape_3"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/mul_1"
  op: "Mul"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Tile"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Reshape_4"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/mul_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_27"
  op: "AddN"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/Reshape_grad/Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moments/sufficient_statistics/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  op: "ExpandDims"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/Size"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/strided_slice"
  op: "StridedSlice"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/Shape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/concat"
  op: "ConcatV2"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/strided_slice"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/count_grad/Reshape_4"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/Reshape_1"
  op: "Reshape"
  input: "generator/batch_norm/moments/sufficient_statistics/Gather/indices"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/AddN_28"
  op: "AddN"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "Optimizer_G/gradients/generator/batch_norm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/Reshape_grad/Shape"
  op: "Shape"
  input: "generator/projection/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Optimizer_G/gradients/AddN_28"
  input: "Optimizer_G/gradients/generator/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/projection/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "Optimizer_G/gradients/generator/Reshape_grad/Reshape"
  input: "generator/projection/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/projection/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Optimizer_G/gradients/generator/projection/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/projection/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/projection/Relu_grad/ReluGrad"
  input: "^Optimizer_G/gradients/generator/projection/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "Optimizer_G/gradients/generator/projection/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/projection/Relu_grad/ReluGrad"
  input: "^Optimizer_G/gradients/generator/projection/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/projection/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/projection/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/projection/BiasAdd_grad/BiasAddGrad"
  input: "^Optimizer_G/gradients/generator/projection/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/projection/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/projection/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Optimizer_G/gradients/generator/projection/BiasAdd_grad/tuple/control_dependency"
  input: "generator/projection/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/projection/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "z"
  input: "Optimizer_G/gradients/generator/projection/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/projection/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer_G/gradients/generator/projection/MatMul_grad/MatMul"
  input: "^Optimizer_G/gradients/generator/projection/MatMul_grad/MatMul_1"
}
node {
  name: "Optimizer_G/gradients/generator/projection/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/projection/MatMul_grad/MatMul"
  input: "^Optimizer_G/gradients/generator/projection/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/projection/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/gradients/generator/projection/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer_G/gradients/generator/projection/MatMul_grad/MatMul_1"
  input: "^Optimizer_G/gradients/generator/projection/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer_G/gradients/generator/projection/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Optimizer_G/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/beta1_power/Assign"
  op: "Assign"
  input: "Optimizer_G/beta1_power"
  input: "Optimizer_G/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/beta1_power/read"
  op: "Identity"
  input: "Optimizer_G/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "Optimizer_G/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/beta2_power/Assign"
  op: "Assign"
  input: "Optimizer_G/beta2_power"
  input: "Optimizer_G/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/beta2_power/read"
  op: "Identity"
  input: "Optimizer_G/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/projection/weights/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/projection/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/projection/weights/Adam/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/projection/weights/Adam"
  input: "Optimizer_G/generator/projection/weights/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/projection/weights/Adam/read"
  op: "Identity"
  input: "Optimizer_G/generator/projection/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/projection/weights/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/projection/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/projection/weights/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/projection/weights/Adam_1"
  input: "Optimizer_G/generator/projection/weights/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/projection/weights/Adam_1/read"
  op: "Identity"
  input: "Optimizer_G/generator/projection/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/projection/biases/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/projection/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/projection/biases/Adam/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/projection/biases/Adam"
  input: "Optimizer_G/generator/projection/biases/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/projection/biases/Adam/read"
  op: "Identity"
  input: "Optimizer_G/generator/projection/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/projection/biases/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/projection/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/projection/biases/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/projection/biases/Adam_1"
  input: "Optimizer_G/generator/projection/biases/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/projection/biases/Adam_1/read"
  op: "Identity"
  input: "Optimizer_G/generator/projection/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/batch_norm/beta/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/batch_norm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/batch_norm/beta/Adam"
  input: "Optimizer_G/generator/batch_norm/beta/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "Optimizer_G/generator/batch_norm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/batch_norm/beta/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/batch_norm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/batch_norm/beta/Adam_1"
  input: "Optimizer_G/generator/batch_norm/beta/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "Optimizer_G/generator/batch_norm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/batch_norm/gamma/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/batch_norm/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/batch_norm/gamma/Adam/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/batch_norm/gamma/Adam"
  input: "Optimizer_G/generator/batch_norm/gamma/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/batch_norm/gamma/Adam/read"
  op: "Identity"
  input: "Optimizer_G/generator/batch_norm/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/batch_norm/gamma/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/batch_norm/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/batch_norm/gamma/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/batch_norm/gamma/Adam_1"
  input: "Optimizer_G/generator/batch_norm/gamma/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/batch_norm/gamma/Adam_1/read"
  op: "Identity"
  input: "Optimizer_G/generator/batch_norm/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/weights/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/weights/Adam/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp0/weights/Adam"
  input: "Optimizer_G/generator/conv_tp0/weights/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/weights/Adam/read"
  op: "Identity"
  input: "Optimizer_G/generator/conv_tp0/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/weights/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/weights/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp0/weights/Adam_1"
  input: "Optimizer_G/generator/conv_tp0/weights/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/weights/Adam_1/read"
  op: "Identity"
  input: "Optimizer_G/generator/conv_tp0/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam_1"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam/read"
  op: "Identity"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam_1"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam_1/read"
  op: "Identity"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/weights/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/weights/Adam/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp1/weights/Adam"
  input: "Optimizer_G/generator/conv_tp1/weights/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/weights/Adam/read"
  op: "Identity"
  input: "Optimizer_G/generator/conv_tp1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/weights/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/weights/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp1/weights/Adam_1"
  input: "Optimizer_G/generator/conv_tp1/weights/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/weights/Adam_1/read"
  op: "Identity"
  input: "Optimizer_G/generator/conv_tp1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam_1"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam/read"
  op: "Identity"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam_1"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam_1/read"
  op: "Identity"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp3/weights/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp3/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp3/weights/Adam/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp3/weights/Adam"
  input: "Optimizer_G/generator/conv_tp3/weights/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp3/weights/Adam/read"
  op: "Identity"
  input: "Optimizer_G/generator/conv_tp3/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp3/weights/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp3/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp3/weights/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp3/weights/Adam_1"
  input: "Optimizer_G/generator/conv_tp3/weights/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp3/weights/Adam_1/read"
  op: "Identity"
  input: "Optimizer_G/generator/conv_tp3/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp3/biases/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp3/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp3/biases/Adam/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp3/biases/Adam"
  input: "Optimizer_G/generator/conv_tp3/biases/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp3/biases/Adam/read"
  op: "Identity"
  input: "Optimizer_G/generator/conv_tp3/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp3/biases/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp3/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp3/biases/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp3/biases/Adam_1"
  input: "Optimizer_G/generator/conv_tp3/biases/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/generator/conv_tp3/biases/Adam_1/read"
  op: "Identity"
  input: "Optimizer_G/generator/conv_tp3/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.000199999994948
      }
    }
  }
}
node {
  name: "Optimizer_G/Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Optimizer_G/Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "Optimizer_G/Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "Optimizer_G/Adam/update_generator/projection/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/projection/weights"
  input: "Optimizer_G/generator/projection/weights/Adam"
  input: "Optimizer_G/generator/projection/weights/Adam_1"
  input: "Optimizer_G/beta1_power/read"
  input: "Optimizer_G/beta2_power/read"
  input: "Optimizer_G/Adam/learning_rate"
  input: "Optimizer_G/Adam/beta1"
  input: "Optimizer_G/Adam/beta2"
  input: "Optimizer_G/Adam/epsilon"
  input: "Optimizer_G/gradients/generator/projection/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/Adam/update_generator/projection/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/projection/biases"
  input: "Optimizer_G/generator/projection/biases/Adam"
  input: "Optimizer_G/generator/projection/biases/Adam_1"
  input: "Optimizer_G/beta1_power/read"
  input: "Optimizer_G/beta2_power/read"
  input: "Optimizer_G/Adam/learning_rate"
  input: "Optimizer_G/Adam/beta1"
  input: "Optimizer_G/Adam/beta2"
  input: "Optimizer_G/Adam/epsilon"
  input: "Optimizer_G/gradients/generator/projection/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/Adam/update_generator/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/batch_norm/beta"
  input: "Optimizer_G/generator/batch_norm/beta/Adam"
  input: "Optimizer_G/generator/batch_norm/beta/Adam_1"
  input: "Optimizer_G/beta1_power/read"
  input: "Optimizer_G/beta2_power/read"
  input: "Optimizer_G/Adam/learning_rate"
  input: "Optimizer_G/Adam/beta1"
  input: "Optimizer_G/Adam/beta2"
  input: "Optimizer_G/Adam/epsilon"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/Adam/update_generator/batch_norm/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/batch_norm/gamma"
  input: "Optimizer_G/generator/batch_norm/gamma/Adam"
  input: "Optimizer_G/generator/batch_norm/gamma/Adam_1"
  input: "Optimizer_G/beta1_power/read"
  input: "Optimizer_G/beta2_power/read"
  input: "Optimizer_G/Adam/learning_rate"
  input: "Optimizer_G/Adam/beta1"
  input: "Optimizer_G/Adam/beta2"
  input: "Optimizer_G/Adam/epsilon"
  input: "Optimizer_G/gradients/generator/batch_norm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/Adam/update_generator/conv_tp0/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/conv_tp0/weights"
  input: "Optimizer_G/generator/conv_tp0/weights/Adam"
  input: "Optimizer_G/generator/conv_tp0/weights/Adam_1"
  input: "Optimizer_G/beta1_power/read"
  input: "Optimizer_G/beta2_power/read"
  input: "Optimizer_G/Adam/learning_rate"
  input: "Optimizer_G/Adam/beta1"
  input: "Optimizer_G/Adam/beta2"
  input: "Optimizer_G/Adam/epsilon"
  input: "Optimizer_G/gradients/generator/conv_tp0/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/Adam/update_generator/conv_tp0/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/conv_tp0/BatchNorm/beta"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam_1"
  input: "Optimizer_G/beta1_power/read"
  input: "Optimizer_G/beta2_power/read"
  input: "Optimizer_G/Adam/learning_rate"
  input: "Optimizer_G/Adam/beta1"
  input: "Optimizer_G/Adam/beta2"
  input: "Optimizer_G/Adam/epsilon"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/Adam/update_generator/conv_tp0/BatchNorm/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/conv_tp0/BatchNorm/gamma"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam_1"
  input: "Optimizer_G/beta1_power/read"
  input: "Optimizer_G/beta2_power/read"
  input: "Optimizer_G/Adam/learning_rate"
  input: "Optimizer_G/Adam/beta1"
  input: "Optimizer_G/Adam/beta2"
  input: "Optimizer_G/Adam/epsilon"
  input: "Optimizer_G/gradients/generator/conv_tp0/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/Adam/update_generator/conv_tp1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/conv_tp1/weights"
  input: "Optimizer_G/generator/conv_tp1/weights/Adam"
  input: "Optimizer_G/generator/conv_tp1/weights/Adam_1"
  input: "Optimizer_G/beta1_power/read"
  input: "Optimizer_G/beta2_power/read"
  input: "Optimizer_G/Adam/learning_rate"
  input: "Optimizer_G/Adam/beta1"
  input: "Optimizer_G/Adam/beta2"
  input: "Optimizer_G/Adam/epsilon"
  input: "Optimizer_G/gradients/generator/conv_tp1/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/Adam/update_generator/conv_tp1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/conv_tp1/BatchNorm/beta"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam_1"
  input: "Optimizer_G/beta1_power/read"
  input: "Optimizer_G/beta2_power/read"
  input: "Optimizer_G/Adam/learning_rate"
  input: "Optimizer_G/Adam/beta1"
  input: "Optimizer_G/Adam/beta2"
  input: "Optimizer_G/Adam/epsilon"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/Adam/update_generator/conv_tp1/BatchNorm/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/conv_tp1/BatchNorm/gamma"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam_1"
  input: "Optimizer_G/beta1_power/read"
  input: "Optimizer_G/beta2_power/read"
  input: "Optimizer_G/Adam/learning_rate"
  input: "Optimizer_G/Adam/beta1"
  input: "Optimizer_G/Adam/beta2"
  input: "Optimizer_G/Adam/epsilon"
  input: "Optimizer_G/gradients/generator/conv_tp1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/Adam/update_generator/conv_tp3/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/conv_tp3/weights"
  input: "Optimizer_G/generator/conv_tp3/weights/Adam"
  input: "Optimizer_G/generator/conv_tp3/weights/Adam_1"
  input: "Optimizer_G/beta1_power/read"
  input: "Optimizer_G/beta2_power/read"
  input: "Optimizer_G/Adam/learning_rate"
  input: "Optimizer_G/Adam/beta1"
  input: "Optimizer_G/Adam/beta2"
  input: "Optimizer_G/Adam/epsilon"
  input: "Optimizer_G/gradients/generator/conv_tp3/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/Adam/update_generator/conv_tp3/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/conv_tp3/biases"
  input: "Optimizer_G/generator/conv_tp3/biases/Adam"
  input: "Optimizer_G/generator/conv_tp3/biases/Adam_1"
  input: "Optimizer_G/beta1_power/read"
  input: "Optimizer_G/beta2_power/read"
  input: "Optimizer_G/Adam/learning_rate"
  input: "Optimizer_G/Adam/beta1"
  input: "Optimizer_G/Adam/beta2"
  input: "Optimizer_G/Adam/epsilon"
  input: "Optimizer_G/gradients/generator/conv_tp3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer_G/Adam/mul"
  op: "Mul"
  input: "Optimizer_G/beta1_power/read"
  input: "Optimizer_G/Adam/beta1"
  input: "^Optimizer_G/Adam/update_generator/projection/weights/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/projection/biases/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/batch_norm/beta/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/batch_norm/gamma/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp0/weights/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp0/BatchNorm/beta/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp0/BatchNorm/gamma/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp1/weights/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp1/BatchNorm/beta/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp1/BatchNorm/gamma/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp3/weights/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp3/biases/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/Adam/Assign"
  op: "Assign"
  input: "Optimizer_G/beta1_power"
  input: "Optimizer_G/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/Adam/mul_1"
  op: "Mul"
  input: "Optimizer_G/beta2_power/read"
  input: "Optimizer_G/Adam/beta2"
  input: "^Optimizer_G/Adam/update_generator/projection/weights/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/projection/biases/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/batch_norm/beta/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/batch_norm/gamma/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp0/weights/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp0/BatchNorm/beta/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp0/BatchNorm/gamma/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp1/weights/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp1/BatchNorm/beta/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp1/BatchNorm/gamma/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp3/weights/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp3/biases/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer_G/Adam/Assign_1"
  op: "Assign"
  input: "Optimizer_G/beta2_power"
  input: "Optimizer_G/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer_G/Adam"
  op: "NoOp"
  input: "^Optimizer_G/Adam/update_generator/projection/weights/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/projection/biases/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/batch_norm/beta/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/batch_norm/gamma/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp0/weights/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp0/BatchNorm/beta/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp0/BatchNorm/gamma/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp1/weights/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp1/BatchNorm/beta/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp1/BatchNorm/gamma/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp3/weights/ApplyAdam"
  input: "^Optimizer_G/Adam/update_generator/conv_tp3/biases/ApplyAdam"
  input: "^Optimizer_G/Adam/Assign"
  input: "^Optimizer_G/Adam/Assign_1"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 81
          }
        }
        string_val: "Optimizer_D/beta1_power"
        string_val: "Optimizer_D/beta2_power"
        string_val: "Optimizer_D/discriminator/conv0/biases/Adam"
        string_val: "Optimizer_D/discriminator/conv0/biases/Adam_1"
        string_val: "Optimizer_D/discriminator/conv0/weights/Adam"
        string_val: "Optimizer_D/discriminator/conv0/weights/Adam_1"
        string_val: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam"
        string_val: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam_1"
        string_val: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam"
        string_val: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam_1"
        string_val: "Optimizer_D/discriminator/conv1/weights/Adam"
        string_val: "Optimizer_D/discriminator/conv1/weights/Adam_1"
        string_val: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam"
        string_val: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam_1"
        string_val: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam"
        string_val: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam_1"
        string_val: "Optimizer_D/discriminator/conv2/weights/Adam"
        string_val: "Optimizer_D/discriminator/conv2/weights/Adam_1"
        string_val: "Optimizer_D/discriminator/conv4/biases/Adam"
        string_val: "Optimizer_D/discriminator/conv4/biases/Adam_1"
        string_val: "Optimizer_D/discriminator/conv4/weights/Adam"
        string_val: "Optimizer_D/discriminator/conv4/weights/Adam_1"
        string_val: "Optimizer_G/beta1_power"
        string_val: "Optimizer_G/beta2_power"
        string_val: "Optimizer_G/generator/batch_norm/beta/Adam"
        string_val: "Optimizer_G/generator/batch_norm/beta/Adam_1"
        string_val: "Optimizer_G/generator/batch_norm/gamma/Adam"
        string_val: "Optimizer_G/generator/batch_norm/gamma/Adam_1"
        string_val: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam"
        string_val: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam_1"
        string_val: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam"
        string_val: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam_1"
        string_val: "Optimizer_G/generator/conv_tp0/weights/Adam"
        string_val: "Optimizer_G/generator/conv_tp0/weights/Adam_1"
        string_val: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam"
        string_val: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam_1"
        string_val: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam"
        string_val: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam_1"
        string_val: "Optimizer_G/generator/conv_tp1/weights/Adam"
        string_val: "Optimizer_G/generator/conv_tp1/weights/Adam_1"
        string_val: "Optimizer_G/generator/conv_tp3/biases/Adam"
        string_val: "Optimizer_G/generator/conv_tp3/biases/Adam_1"
        string_val: "Optimizer_G/generator/conv_tp3/weights/Adam"
        string_val: "Optimizer_G/generator/conv_tp3/weights/Adam_1"
        string_val: "Optimizer_G/generator/projection/biases/Adam"
        string_val: "Optimizer_G/generator/projection/biases/Adam_1"
        string_val: "Optimizer_G/generator/projection/weights/Adam"
        string_val: "Optimizer_G/generator/projection/weights/Adam_1"
        string_val: "discriminator/conv0/biases"
        string_val: "discriminator/conv0/weights"
        string_val: "discriminator/conv1/BatchNorm/beta"
        string_val: "discriminator/conv1/BatchNorm/gamma"
        string_val: "discriminator/conv1/BatchNorm/moving_mean"
        string_val: "discriminator/conv1/BatchNorm/moving_variance"
        string_val: "discriminator/conv1/weights"
        string_val: "discriminator/conv2/BatchNorm/beta"
        string_val: "discriminator/conv2/BatchNorm/gamma"
        string_val: "discriminator/conv2/BatchNorm/moving_mean"
        string_val: "discriminator/conv2/BatchNorm/moving_variance"
        string_val: "discriminator/conv2/weights"
        string_val: "discriminator/conv4/biases"
        string_val: "discriminator/conv4/weights"
        string_val: "generator/batch_norm/beta"
        string_val: "generator/batch_norm/gamma"
        string_val: "generator/batch_norm/moving_mean"
        string_val: "generator/batch_norm/moving_variance"
        string_val: "generator/conv_tp0/BatchNorm/beta"
        string_val: "generator/conv_tp0/BatchNorm/gamma"
        string_val: "generator/conv_tp0/BatchNorm/moving_mean"
        string_val: "generator/conv_tp0/BatchNorm/moving_variance"
        string_val: "generator/conv_tp0/weights"
        string_val: "generator/conv_tp1/BatchNorm/beta"
        string_val: "generator/conv_tp1/BatchNorm/gamma"
        string_val: "generator/conv_tp1/BatchNorm/moving_mean"
        string_val: "generator/conv_tp1/BatchNorm/moving_variance"
        string_val: "generator/conv_tp1/weights"
        string_val: "generator/conv_tp3/biases"
        string_val: "generator/conv_tp3/weights"
        string_val: "generator/projection/biases"
        string_val: "generator/projection/weights"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 81
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Optimizer_D/beta1_power"
  input: "Optimizer_D/beta2_power"
  input: "Optimizer_D/discriminator/conv0/biases/Adam"
  input: "Optimizer_D/discriminator/conv0/biases/Adam_1"
  input: "Optimizer_D/discriminator/conv0/weights/Adam"
  input: "Optimizer_D/discriminator/conv0/weights/Adam_1"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam_1"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam_1"
  input: "Optimizer_D/discriminator/conv1/weights/Adam"
  input: "Optimizer_D/discriminator/conv1/weights/Adam_1"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam_1"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam_1"
  input: "Optimizer_D/discriminator/conv2/weights/Adam"
  input: "Optimizer_D/discriminator/conv2/weights/Adam_1"
  input: "Optimizer_D/discriminator/conv4/biases/Adam"
  input: "Optimizer_D/discriminator/conv4/biases/Adam_1"
  input: "Optimizer_D/discriminator/conv4/weights/Adam"
  input: "Optimizer_D/discriminator/conv4/weights/Adam_1"
  input: "Optimizer_G/beta1_power"
  input: "Optimizer_G/beta2_power"
  input: "Optimizer_G/generator/batch_norm/beta/Adam"
  input: "Optimizer_G/generator/batch_norm/beta/Adam_1"
  input: "Optimizer_G/generator/batch_norm/gamma/Adam"
  input: "Optimizer_G/generator/batch_norm/gamma/Adam_1"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam_1"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam_1"
  input: "Optimizer_G/generator/conv_tp0/weights/Adam"
  input: "Optimizer_G/generator/conv_tp0/weights/Adam_1"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam_1"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam_1"
  input: "Optimizer_G/generator/conv_tp1/weights/Adam"
  input: "Optimizer_G/generator/conv_tp1/weights/Adam_1"
  input: "Optimizer_G/generator/conv_tp3/biases/Adam"
  input: "Optimizer_G/generator/conv_tp3/biases/Adam_1"
  input: "Optimizer_G/generator/conv_tp3/weights/Adam"
  input: "Optimizer_G/generator/conv_tp3/weights/Adam_1"
  input: "Optimizer_G/generator/projection/biases/Adam"
  input: "Optimizer_G/generator/projection/biases/Adam_1"
  input: "Optimizer_G/generator/projection/weights/Adam"
  input: "Optimizer_G/generator/projection/weights/Adam_1"
  input: "discriminator/conv0/biases"
  input: "discriminator/conv0/weights"
  input: "discriminator/conv1/BatchNorm/beta"
  input: "discriminator/conv1/BatchNorm/gamma"
  input: "discriminator/conv1/BatchNorm/moving_mean"
  input: "discriminator/conv1/BatchNorm/moving_variance"
  input: "discriminator/conv1/weights"
  input: "discriminator/conv2/BatchNorm/beta"
  input: "discriminator/conv2/BatchNorm/gamma"
  input: "discriminator/conv2/BatchNorm/moving_mean"
  input: "discriminator/conv2/BatchNorm/moving_variance"
  input: "discriminator/conv2/weights"
  input: "discriminator/conv4/biases"
  input: "discriminator/conv4/weights"
  input: "generator/batch_norm/beta"
  input: "generator/batch_norm/gamma"
  input: "generator/batch_norm/moving_mean"
  input: "generator/batch_norm/moving_variance"
  input: "generator/conv_tp0/BatchNorm/beta"
  input: "generator/conv_tp0/BatchNorm/gamma"
  input: "generator/conv_tp0/BatchNorm/moving_mean"
  input: "generator/conv_tp0/BatchNorm/moving_variance"
  input: "generator/conv_tp0/weights"
  input: "generator/conv_tp1/BatchNorm/beta"
  input: "generator/conv_tp1/BatchNorm/gamma"
  input: "generator/conv_tp1/BatchNorm/moving_mean"
  input: "generator/conv_tp1/BatchNorm/moving_variance"
  input: "generator/conv_tp1/weights"
  input: "generator/conv_tp3/biases"
  input: "generator/conv_tp3/weights"
  input: "generator/projection/biases"
  input: "generator/projection/weights"
  input: "global_step"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Optimizer_D/beta1_power"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "Optimizer_D/beta2_power"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv0/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv0/biases/Adam"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv0/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv0/biases/Adam_1"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv0/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv0/weights/Adam"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv0/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv0/weights/Adam_1"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam_1"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv1/weights/Adam"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv1/weights/Adam_1"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam_1"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv2/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv2/weights/Adam"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv2/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv2/weights/Adam_1"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv4/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv4/biases/Adam"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv4/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv4/biases/Adam_1"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv4/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv4/weights/Adam"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_D/discriminator/conv4/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "Optimizer_D/discriminator/conv4/weights/Adam_1"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "Optimizer_G/beta1_power"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "Optimizer_G/beta2_power"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/batch_norm/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "Optimizer_G/generator/batch_norm/beta/Adam"
  input: "save/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/batch_norm/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "Optimizer_G/generator/batch_norm/beta/Adam_1"
  input: "save/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/batch_norm/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "Optimizer_G/generator/batch_norm/gamma/Adam"
  input: "save/RestoreV2_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/batch_norm/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "Optimizer_G/generator/batch_norm/gamma/Adam_1"
  input: "save/RestoreV2_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam"
  input: "save/RestoreV2_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam"
  input: "save/RestoreV2_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam_1"
  input: "save/RestoreV2_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/conv_tp0/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp0/weights/Adam"
  input: "save/RestoreV2_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/conv_tp0/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp0/weights/Adam_1"
  input: "save/RestoreV2_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam"
  input: "save/RestoreV2_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_36/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_36/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_36"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_36/tensor_names"
  input: "save/RestoreV2_36/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam"
  input: "save/RestoreV2_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_37/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_37/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_37"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_37/tensor_names"
  input: "save/RestoreV2_37/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam_1"
  input: "save/RestoreV2_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_38/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/conv_tp1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_38/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_38"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_38/tensor_names"
  input: "save/RestoreV2_38/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp1/weights/Adam"
  input: "save/RestoreV2_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_39/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/conv_tp1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_39/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_39"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_39/tensor_names"
  input: "save/RestoreV2_39/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp1/weights/Adam_1"
  input: "save/RestoreV2_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_40/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/conv_tp3/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_40/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_40"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_40/tensor_names"
  input: "save/RestoreV2_40/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp3/biases/Adam"
  input: "save/RestoreV2_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_41/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/conv_tp3/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_41/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_41"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_41/tensor_names"
  input: "save/RestoreV2_41/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp3/biases/Adam_1"
  input: "save/RestoreV2_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_42/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/conv_tp3/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_42/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_42"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_42/tensor_names"
  input: "save/RestoreV2_42/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp3/weights/Adam"
  input: "save/RestoreV2_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_43/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/conv_tp3/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_43/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_43"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_43/tensor_names"
  input: "save/RestoreV2_43/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "Optimizer_G/generator/conv_tp3/weights/Adam_1"
  input: "save/RestoreV2_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_44/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/projection/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_44/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_44"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_44/tensor_names"
  input: "save/RestoreV2_44/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "Optimizer_G/generator/projection/biases/Adam"
  input: "save/RestoreV2_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_45/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/projection/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_45/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_45"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_45/tensor_names"
  input: "save/RestoreV2_45/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "Optimizer_G/generator/projection/biases/Adam_1"
  input: "save/RestoreV2_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_46/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/projection/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_46/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_46"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_46/tensor_names"
  input: "save/RestoreV2_46/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "Optimizer_G/generator/projection/weights/Adam"
  input: "save/RestoreV2_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_47/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Optimizer_G/generator/projection/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_47/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_47"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_47/tensor_names"
  input: "save/RestoreV2_47/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "Optimizer_G/generator/projection/weights/Adam_1"
  input: "save/RestoreV2_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_48/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/conv0/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_48/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_48"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_48/tensor_names"
  input: "save/RestoreV2_48/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "discriminator/conv0/biases"
  input: "save/RestoreV2_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_49/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/conv0/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_49/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_49"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_49/tensor_names"
  input: "save/RestoreV2_49/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "discriminator/conv0/weights"
  input: "save/RestoreV2_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_50/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_50/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_50"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_50/tensor_names"
  input: "save/RestoreV2_50/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "discriminator/conv1/BatchNorm/beta"
  input: "save/RestoreV2_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_51/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_51/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_51"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_51/tensor_names"
  input: "save/RestoreV2_51/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "discriminator/conv1/BatchNorm/gamma"
  input: "save/RestoreV2_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_52/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_52/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_52"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_52/tensor_names"
  input: "save/RestoreV2_52/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "discriminator/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_53/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_53/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_53"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_53/tensor_names"
  input: "save/RestoreV2_53/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "discriminator/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_54/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/conv1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_54/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_54"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_54/tensor_names"
  input: "save/RestoreV2_54/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "discriminator/conv1/weights"
  input: "save/RestoreV2_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_55/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_55/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_55"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_55/tensor_names"
  input: "save/RestoreV2_55/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "discriminator/conv2/BatchNorm/beta"
  input: "save/RestoreV2_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_56/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_56/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_56"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_56/tensor_names"
  input: "save/RestoreV2_56/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "discriminator/conv2/BatchNorm/gamma"
  input: "save/RestoreV2_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_57/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_57/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_57"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_57/tensor_names"
  input: "save/RestoreV2_57/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "discriminator/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_58/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_58/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_58"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_58/tensor_names"
  input: "save/RestoreV2_58/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "discriminator/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_59/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/conv2/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_59/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_59"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_59/tensor_names"
  input: "save/RestoreV2_59/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "discriminator/conv2/weights"
  input: "save/RestoreV2_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_60/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/conv4/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_60/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_60"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_60/tensor_names"
  input: "save/RestoreV2_60/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "discriminator/conv4/biases"
  input: "save/RestoreV2_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_61/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/conv4/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_61/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_61"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_61/tensor_names"
  input: "save/RestoreV2_61/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "discriminator/conv4/weights"
  input: "save/RestoreV2_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_62/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_62/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_62"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_62/tensor_names"
  input: "save/RestoreV2_62/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "generator/batch_norm/beta"
  input: "save/RestoreV2_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_63/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_63/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_63"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_63/tensor_names"
  input: "save/RestoreV2_63/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "generator/batch_norm/gamma"
  input: "save/RestoreV2_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_64/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_64/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_64"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_64/tensor_names"
  input: "save/RestoreV2_64/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "generator/batch_norm/moving_mean"
  input: "save/RestoreV2_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_65/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_65/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_65"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_65/tensor_names"
  input: "save/RestoreV2_65/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "generator/batch_norm/moving_variance"
  input: "save/RestoreV2_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_66/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_66/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_66"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_66/tensor_names"
  input: "save/RestoreV2_66/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "generator/conv_tp0/BatchNorm/beta"
  input: "save/RestoreV2_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_67/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_67/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_67"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_67/tensor_names"
  input: "save/RestoreV2_67/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "generator/conv_tp0/BatchNorm/gamma"
  input: "save/RestoreV2_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_68/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/conv_tp0/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_68/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_68"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_68/tensor_names"
  input: "save/RestoreV2_68/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "generator/conv_tp0/BatchNorm/moving_mean"
  input: "save/RestoreV2_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_69/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/conv_tp0/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_69/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_69"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_69/tensor_names"
  input: "save/RestoreV2_69/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "generator/conv_tp0/BatchNorm/moving_variance"
  input: "save/RestoreV2_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_70/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/conv_tp0/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_70/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_70"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_70/tensor_names"
  input: "save/RestoreV2_70/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "generator/conv_tp0/weights"
  input: "save/RestoreV2_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_71/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_71/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_71"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_71/tensor_names"
  input: "save/RestoreV2_71/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "generator/conv_tp1/BatchNorm/beta"
  input: "save/RestoreV2_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_72/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_72/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_72"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_72/tensor_names"
  input: "save/RestoreV2_72/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "generator/conv_tp1/BatchNorm/gamma"
  input: "save/RestoreV2_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_73/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/conv_tp1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_73/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_73"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_73/tensor_names"
  input: "save/RestoreV2_73/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "generator/conv_tp1/BatchNorm/moving_mean"
  input: "save/RestoreV2_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_74/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/conv_tp1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_74/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_74"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_74/tensor_names"
  input: "save/RestoreV2_74/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "generator/conv_tp1/BatchNorm/moving_variance"
  input: "save/RestoreV2_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_75/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/conv_tp1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_75/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_75"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_75/tensor_names"
  input: "save/RestoreV2_75/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "generator/conv_tp1/weights"
  input: "save/RestoreV2_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_76/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/conv_tp3/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_76/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_76"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_76/tensor_names"
  input: "save/RestoreV2_76/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "generator/conv_tp3/biases"
  input: "save/RestoreV2_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_77/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/conv_tp3/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_77/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_77"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_77/tensor_names"
  input: "save/RestoreV2_77/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "generator/conv_tp3/weights"
  input: "save/RestoreV2_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_78/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/projection/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_78/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_78"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_78/tensor_names"
  input: "save/RestoreV2_78/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "generator/projection/biases"
  input: "save/RestoreV2_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_79/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/projection/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_79/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_79"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_79/tensor_names"
  input: "save/RestoreV2_79/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "generator/projection/weights"
  input: "save/RestoreV2_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_80/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_80/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_80"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_80/tensor_names"
  input: "save/RestoreV2_80/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2_80"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
}
node {
  name: "loss_D_real/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss_D_real"
      }
    }
  }
}
node {
  name: "loss_D_real"
  op: "ScalarSummary"
  input: "loss_D_real/tags"
  input: "Loss_D/sigmoid_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss_D_fake/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss_D_fake"
      }
    }
  }
}
node {
  name: "loss_D_fake"
  op: "ScalarSummary"
  input: "loss_D_fake/tags"
  input: "Loss_D/sigmoid_cross_entropy_loss_1/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss_D/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss_D"
      }
    }
  }
}
node {
  name: "loss_D"
  op: "ScalarSummary"
  input: "loss_D/tags"
  input: "Loss_D/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss_G/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss_G"
      }
    }
  }
}
node {
  name: "loss_G"
  op: "ScalarSummary"
  input: "loss_G/tags"
  input: "Loss_G/sigmoid_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "loss_D_real"
  input: "loss_D_fake"
  input: "loss_D"
  input: "loss_G"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "generator/projection/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "generator/projection/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "generator/batch_norm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "generator/batch_norm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "generator/batch_norm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "generator/batch_norm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "generator/conv_tp0/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "generator/conv_tp0/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "generator/conv_tp0/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "generator/conv_tp0/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "generator/conv_tp0/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "generator/conv_tp1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "generator/conv_tp1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "generator/conv_tp1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "generator/conv_tp1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "generator/conv_tp1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "generator/conv_tp3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "generator/conv_tp3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "discriminator/conv0/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "discriminator/conv0/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "discriminator/conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "discriminator/conv1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "discriminator/conv1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "discriminator/conv1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "discriminator/conv1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "discriminator/conv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "discriminator/conv2/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "discriminator/conv2/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "discriminator/conv2/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "discriminator/conv2/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "discriminator/conv4/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "discriminator/conv4/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "Optimizer_D/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "Optimizer_D/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv0/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv0/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv0/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv0/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv0/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv1/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv1/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv2/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv2/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv4/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv4/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv4/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "Optimizer_D/discriminator/conv4/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "Optimizer_G/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "Optimizer_G/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/projection/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/projection/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/projection/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/projection/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/projection/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/batch_norm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/batch_norm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/batch_norm/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/batch_norm/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/conv_tp0/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/conv_tp0/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/conv_tp1/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/conv_tp1/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/conv_tp3/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/conv_tp3/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/conv_tp3/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "Optimizer_G/generator/conv_tp3/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv_tp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  input: "report_uninitialized_variables/IsVariableInitialized_80"
  attr {
    key: "N"
    value {
      i: 81
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 81
          }
        }
        string_val: "global_step"
        string_val: "generator/projection/weights"
        string_val: "generator/projection/biases"
        string_val: "generator/batch_norm/beta"
        string_val: "generator/batch_norm/gamma"
        string_val: "generator/batch_norm/moving_mean"
        string_val: "generator/batch_norm/moving_variance"
        string_val: "generator/conv_tp0/weights"
        string_val: "generator/conv_tp0/BatchNorm/beta"
        string_val: "generator/conv_tp0/BatchNorm/gamma"
        string_val: "generator/conv_tp0/BatchNorm/moving_mean"
        string_val: "generator/conv_tp0/BatchNorm/moving_variance"
        string_val: "generator/conv_tp1/weights"
        string_val: "generator/conv_tp1/BatchNorm/beta"
        string_val: "generator/conv_tp1/BatchNorm/gamma"
        string_val: "generator/conv_tp1/BatchNorm/moving_mean"
        string_val: "generator/conv_tp1/BatchNorm/moving_variance"
        string_val: "generator/conv_tp3/weights"
        string_val: "generator/conv_tp3/biases"
        string_val: "discriminator/conv0/weights"
        string_val: "discriminator/conv0/biases"
        string_val: "discriminator/conv1/weights"
        string_val: "discriminator/conv1/BatchNorm/beta"
        string_val: "discriminator/conv1/BatchNorm/gamma"
        string_val: "discriminator/conv1/BatchNorm/moving_mean"
        string_val: "discriminator/conv1/BatchNorm/moving_variance"
        string_val: "discriminator/conv2/weights"
        string_val: "discriminator/conv2/BatchNorm/beta"
        string_val: "discriminator/conv2/BatchNorm/gamma"
        string_val: "discriminator/conv2/BatchNorm/moving_mean"
        string_val: "discriminator/conv2/BatchNorm/moving_variance"
        string_val: "discriminator/conv4/weights"
        string_val: "discriminator/conv4/biases"
        string_val: "Optimizer_D/beta1_power"
        string_val: "Optimizer_D/beta2_power"
        string_val: "Optimizer_D/discriminator/conv0/weights/Adam"
        string_val: "Optimizer_D/discriminator/conv0/weights/Adam_1"
        string_val: "Optimizer_D/discriminator/conv0/biases/Adam"
        string_val: "Optimizer_D/discriminator/conv0/biases/Adam_1"
        string_val: "Optimizer_D/discriminator/conv1/weights/Adam"
        string_val: "Optimizer_D/discriminator/conv1/weights/Adam_1"
        string_val: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam"
        string_val: "Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam_1"
        string_val: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam"
        string_val: "Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam_1"
        string_val: "Optimizer_D/discriminator/conv2/weights/Adam"
        string_val: "Optimizer_D/discriminator/conv2/weights/Adam_1"
        string_val: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam"
        string_val: "Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam_1"
        string_val: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam"
        string_val: "Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam_1"
        string_val: "Optimizer_D/discriminator/conv4/weights/Adam"
        string_val: "Optimizer_D/discriminator/conv4/weights/Adam_1"
        string_val: "Optimizer_D/discriminator/conv4/biases/Adam"
        string_val: "Optimizer_D/discriminator/conv4/biases/Adam_1"
        string_val: "Optimizer_G/beta1_power"
        string_val: "Optimizer_G/beta2_power"
        string_val: "Optimizer_G/generator/projection/weights/Adam"
        string_val: "Optimizer_G/generator/projection/weights/Adam_1"
        string_val: "Optimizer_G/generator/projection/biases/Adam"
        string_val: "Optimizer_G/generator/projection/biases/Adam_1"
        string_val: "Optimizer_G/generator/batch_norm/beta/Adam"
        string_val: "Optimizer_G/generator/batch_norm/beta/Adam_1"
        string_val: "Optimizer_G/generator/batch_norm/gamma/Adam"
        string_val: "Optimizer_G/generator/batch_norm/gamma/Adam_1"
        string_val: "Optimizer_G/generator/conv_tp0/weights/Adam"
        string_val: "Optimizer_G/generator/conv_tp0/weights/Adam_1"
        string_val: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam"
        string_val: "Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam_1"
        string_val: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam"
        string_val: "Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam_1"
        string_val: "Optimizer_G/generator/conv_tp1/weights/Adam"
        string_val: "Optimizer_G/generator/conv_tp1/weights/Adam_1"
        string_val: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam"
        string_val: "Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam_1"
        string_val: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam"
        string_val: "Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam_1"
        string_val: "Optimizer_G/generator/conv_tp3/weights/Adam"
        string_val: "Optimizer_G/generator/conv_tp3/weights/Adam_1"
        string_val: "Optimizer_G/generator/conv_tp3/biases/Adam"
        string_val: "Optimizer_G/generator/conv_tp3/biases/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 81
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 81
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^generator/projection/weights/Assign"
  input: "^generator/projection/biases/Assign"
  input: "^generator/batch_norm/beta/Assign"
  input: "^generator/batch_norm/gamma/Assign"
  input: "^generator/batch_norm/moving_mean/Assign"
  input: "^generator/batch_norm/moving_variance/Assign"
  input: "^generator/conv_tp0/weights/Assign"
  input: "^generator/conv_tp0/BatchNorm/beta/Assign"
  input: "^generator/conv_tp0/BatchNorm/gamma/Assign"
  input: "^generator/conv_tp0/BatchNorm/moving_mean/Assign"
  input: "^generator/conv_tp0/BatchNorm/moving_variance/Assign"
  input: "^generator/conv_tp1/weights/Assign"
  input: "^generator/conv_tp1/BatchNorm/beta/Assign"
  input: "^generator/conv_tp1/BatchNorm/gamma/Assign"
  input: "^generator/conv_tp1/BatchNorm/moving_mean/Assign"
  input: "^generator/conv_tp1/BatchNorm/moving_variance/Assign"
  input: "^generator/conv_tp3/weights/Assign"
  input: "^generator/conv_tp3/biases/Assign"
  input: "^discriminator/conv0/weights/Assign"
  input: "^discriminator/conv0/biases/Assign"
  input: "^discriminator/conv1/weights/Assign"
  input: "^discriminator/conv1/BatchNorm/beta/Assign"
  input: "^discriminator/conv1/BatchNorm/gamma/Assign"
  input: "^discriminator/conv1/BatchNorm/moving_mean/Assign"
  input: "^discriminator/conv1/BatchNorm/moving_variance/Assign"
  input: "^discriminator/conv2/weights/Assign"
  input: "^discriminator/conv2/BatchNorm/beta/Assign"
  input: "^discriminator/conv2/BatchNorm/gamma/Assign"
  input: "^discriminator/conv2/BatchNorm/moving_mean/Assign"
  input: "^discriminator/conv2/BatchNorm/moving_variance/Assign"
  input: "^discriminator/conv4/weights/Assign"
  input: "^discriminator/conv4/biases/Assign"
  input: "^Optimizer_D/beta1_power/Assign"
  input: "^Optimizer_D/beta2_power/Assign"
  input: "^Optimizer_D/discriminator/conv0/weights/Adam/Assign"
  input: "^Optimizer_D/discriminator/conv0/weights/Adam_1/Assign"
  input: "^Optimizer_D/discriminator/conv0/biases/Adam/Assign"
  input: "^Optimizer_D/discriminator/conv0/biases/Adam_1/Assign"
  input: "^Optimizer_D/discriminator/conv1/weights/Adam/Assign"
  input: "^Optimizer_D/discriminator/conv1/weights/Adam_1/Assign"
  input: "^Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam/Assign"
  input: "^Optimizer_D/discriminator/conv1/BatchNorm/beta/Adam_1/Assign"
  input: "^Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam/Assign"
  input: "^Optimizer_D/discriminator/conv1/BatchNorm/gamma/Adam_1/Assign"
  input: "^Optimizer_D/discriminator/conv2/weights/Adam/Assign"
  input: "^Optimizer_D/discriminator/conv2/weights/Adam_1/Assign"
  input: "^Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam/Assign"
  input: "^Optimizer_D/discriminator/conv2/BatchNorm/beta/Adam_1/Assign"
  input: "^Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam/Assign"
  input: "^Optimizer_D/discriminator/conv2/BatchNorm/gamma/Adam_1/Assign"
  input: "^Optimizer_D/discriminator/conv4/weights/Adam/Assign"
  input: "^Optimizer_D/discriminator/conv4/weights/Adam_1/Assign"
  input: "^Optimizer_D/discriminator/conv4/biases/Adam/Assign"
  input: "^Optimizer_D/discriminator/conv4/biases/Adam_1/Assign"
  input: "^Optimizer_G/beta1_power/Assign"
  input: "^Optimizer_G/beta2_power/Assign"
  input: "^Optimizer_G/generator/projection/weights/Adam/Assign"
  input: "^Optimizer_G/generator/projection/weights/Adam_1/Assign"
  input: "^Optimizer_G/generator/projection/biases/Adam/Assign"
  input: "^Optimizer_G/generator/projection/biases/Adam_1/Assign"
  input: "^Optimizer_G/generator/batch_norm/beta/Adam/Assign"
  input: "^Optimizer_G/generator/batch_norm/beta/Adam_1/Assign"
  input: "^Optimizer_G/generator/batch_norm/gamma/Adam/Assign"
  input: "^Optimizer_G/generator/batch_norm/gamma/Adam_1/Assign"
  input: "^Optimizer_G/generator/conv_tp0/weights/Adam/Assign"
  input: "^Optimizer_G/generator/conv_tp0/weights/Adam_1/Assign"
  input: "^Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam/Assign"
  input: "^Optimizer_G/generator/conv_tp0/BatchNorm/beta/Adam_1/Assign"
  input: "^Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam/Assign"
  input: "^Optimizer_G/generator/conv_tp0/BatchNorm/gamma/Adam_1/Assign"
  input: "^Optimizer_G/generator/conv_tp1/weights/Adam/Assign"
  input: "^Optimizer_G/generator/conv_tp1/weights/Adam_1/Assign"
  input: "^Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam/Assign"
  input: "^Optimizer_G/generator/conv_tp1/BatchNorm/beta/Adam_1/Assign"
  input: "^Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam/Assign"
  input: "^Optimizer_G/generator/conv_tp1/BatchNorm/gamma/Adam_1/Assign"
  input: "^Optimizer_G/generator/conv_tp3/weights/Adam/Assign"
  input: "^Optimizer_G/generator/conv_tp3/weights/Adam_1/Assign"
  input: "^Optimizer_G/generator/conv_tp3/biases/Adam/Assign"
  input: "^Optimizer_G/generator/conv_tp3/biases/Adam_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
versions {
  producer: 21
}
